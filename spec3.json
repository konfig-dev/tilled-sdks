{"openapi":"3.0.0","paths":{"/v1/accounts":{"get":{"operationId":"GetAccount","summary":"Get an Account","description":"Retrieves the details of an account.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Account"}}}}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"patch":{"operationId":"UpdateAccount","summary":"Update an Account","description":"Updates an account by setting the values of the parameters passed. Any parameters not provided are left unchanged.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Account"}}}}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/accounts/capabilities":{"post":{"operationId":"AddAccountCapability","summary":"Add an Account Capability","description":"Adds an account capability, account capabilities can only be managed prior to onboarding application submission.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountCapabilityCreateParams"}}}},"responses":{"201":{"description":""}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/accounts/capabilities/{id}":{"delete":{"operationId":"DeleteAccountCapability","summary":"Delete an Account Capability","description":"Removes an account capability, account capabilities can only be managed prior to onboarding application submission.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":""}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"post":{"operationId":"UpdateAccountCapability","summary":"Update an Account Capability","description":"Updates an account capability, account capabilities can only be managed prior to onboarding application submission.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountCapabilityUpdateParams"}}}},"responses":{"201":{"description":""}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/accounts/connected":{"get":{"operationId":"ListConnectedAccounts","summary":"List all Connected Accounts","description":"Returns a list of accounts connected to your account. For merchant accounts, the list is empty.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","style":"deepObject","explode":true,"schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"q","required":false,"in":"query","description":"The partial search of text fields. Supports searching by `account.name`, `account.business_profile.legal_name`,\n`account.id`, `account.email`, `user.name`, `user.email`","schema":{"type":"string"}},{"name":"sort","required":false,"in":"query","description":"The sort parameters, value:direction. Possible values: `name`, `created_at`. Possible directions:  `asc`, `desc`\n\nFor example `name:asc`.\n\nDefault: `created_at:desc`","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Account"}}},"required":["items"]}]}}}}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"post":{"operationId":"CreateConnectedAccount","summary":"Create a Connected Account","description":"Creates a merchant account associated to your partner account.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Account"}}}}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteConnectedAccount","summary":"Delete a Connected Account","description":"Deletes a merchant account.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":""},"400":{"description":""}},"tags":["Accounts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/api-keys":{"post":{"operationId":"CreateAPIKey","summary":"Create an API key","description":"Creates a new API key. For security reasons, keys of type `secret` will only be returned fully *here*, when the key is first created. Your application should store the key in a secure location to authenticate to the API.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKeyCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKey"}}}}},"tags":["API Keys"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListAPIKeys","summary":"List all API Keys","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ApiKey"}}},"required":["items"]}]}}}}},"tags":["API Keys"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/api-keys/{id}":{"patch":{"operationId":"UpdateAPIKey","summary":"Update an API key","description":"Updates the API key. Any parameters not provided will be left unchanged.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKeyUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKey"}}}}},"tags":["API Keys"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteAPIKey","summary":"Delete an API Key","description":"Permanently deletes an API key. It cannot be undone.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["API Keys"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/apple-pay-domains":{"post":{"operationId":"CreateApplePayDomain","summary":"Create an Apple Pay Domain","description":"Creates an Apple Pay Domain for verification","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplePayDomainCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplePayDomain"}}}}},"tags":["ApplePayDomains"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListApplePayDomains","summary":"List all Apple Pay Domains","description":"Returns a list of your registered Apple Pay Domains","parameters":[{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}},{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ApplePayDomain"}}},"required":["items"]}]}}}}},"tags":["ApplePayDomains"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/apple-pay-domains/{id}":{"get":{"operationId":"GetApplePayDomain","summary":"Get an Apple Pay Domain","description":"Retrieves the apple pay domain with the given ID.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApplePayDomain"}}}}},"tags":["ApplePayDomains"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteApplePayDomain","summary":"Delete an Apple Pay Domain","description":"Permanently deletes an Apple Pay Domain","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["ApplePayDomains"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/applications/{account_id}":{"get":{"operationId":"GetMerchantApplication","summary":"Get a Merchant Application","description":"Retrieves a merchant application as long as its `status` is `created` or `started`. Once the application is `submitted` or `active` it is not accessible.","parameters":[{"name":"account_id","required":true,"in":"path","description":"The id of the associated connected (i.e. merchant) account.","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantApplication"}}}},"403":{"description":""},"404":{"description":""}},"tags":["Onboarding"]},"put":{"operationId":"UpdateMerchantApplication","summary":"Update a Merchant Application","description":"Updates a merchant application by overwriting all properties.","parameters":[{"name":"account_id","required":true,"in":"path","description":"The id of the associated connected (i.e. merchant) account.","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantApplicationCreateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantApplication"}}}},"403":{"description":""},"404":{"description":""}},"tags":["Onboarding"]}},"/v1/applications/{account_id}/submit":{"post":{"operationId":"SubmitMerchantApplication","summary":"Submit a Merchant Application","description":"Submits a merchant application to be processed. If any validation errors exist, you must correct them before re-submitting. Once successful submission, you cannot access the application again.","parameters":[{"name":"account_id","required":true,"in":"path","description":"The id of the associated connected (i.e. merchant) account.","schema":{"type":"string"}}],"responses":{"202":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":""},"403":{"description":""},"404":{"description":""}},"tags":["Onboarding"]}},"/v1/auth-links":{"post":{"operationId":"CreateAuthLink","summary":"Create an Auth Link","description":"Create an auth link for a user.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthLinkCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthLinkDto"}}}}},"tags":["Auth Links"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/auth/forgot":{"post":{"operationId":"ForgotPassword","summary":"Forgot Password","description":"Request a temporary link be sent to the supplied email address that will allow the user to reset their password.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForgotPasswordParams"}}}},"responses":{"200":{"description":""}},"tags":["Users"]}},"/v1/auth/login":{"post":{"operationId":"Login","summary":"Login","description":"Creates a JSON Web Token with email and password.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginDto"}}}},"401":{"description":""}},"tags":["Users"]}},"/v1/auth/logout":{"post":{"operationId":"Logout","summary":"Logout","description":"Invalidates the refresh token for a user.","parameters":[],"responses":{"200":{"description":""},"401":{"description":""}},"security":[{"JWT":[]}],"tags":["Users"]}},"/v1/auth/refresh":{"post":{"operationId":"RefreshAccessToken","summary":"Refresh an Access Token","description":"Generate a new access token with a user's refresh token.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessTokenRefreshParams"}}}},"responses":{"200":{"description":""},"400":{"description":""}},"tags":["Users"]}},"/v1/auth/register":{"post":{"operationId":"Register","summary":"Register","description":"Creates a Tilled user and simultaneously creates a `partner` account. *Note: This resource should almost never be used by an existing Tilled customer.*","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterDto"}}}},"403":{"description":""}},"tags":["Users"]}},"/v1/auth/reset":{"post":{"operationId":"ResetPassword","summary":"Reset Password","description":"Reset a user's password with the supplied `password_reset_token`. This will also invalidate a user's refresh token.","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResetPasswordParams"}}}},"responses":{"200":{"description":""},"400":{"description":""}},"tags":["Users"]}},"/v1/balance-transactions":{"get":{"operationId":"ListBalanceTransactions","summary":"List all Balance Transactions","description":"Returns a list of transactions that have contributed to the Tilled account balance (e.g. charges, refunds, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"type","required":false,"in":"query","description":"Only return transaction of the given type.","schema":{"enum":["charge","charge_failure_refund","dispute","dispute_won","refund","refund_failure","adjustment","commission","payout","payout_cancel","payout_failure","fee","platform_fee","platform_fee_refund","outbound_transfer","outbound_transfer_cancel","outbound_transfer_failure","charge_fee","refund_fee","account_fee","payment_method_fee","tilled_fee"],"type":"string"}},{"name":"source_id","required":false,"in":"query","description":"Only returns the original transaction.","schema":{"type":"string"}},{"name":"payout_id","required":false,"in":"query","description":"Only returns transactions that were paid out on the specified payout ID.","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/BalanceTransaction"}}},"required":["items"]}]}}}}},"tags":["Balance Transactions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/balance-transactions/summary":{"get":{"operationId":"GetBalanceTransactionsSummary","summary":"Get a Balance Transactions Summary","description":"Returns a summary of transactions grouped by `time_unit`, `type`, and `currency`.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"time_unit","required":false,"in":"query","description":"String indicating the unit of time to aggregate the summary of data.","schema":{"default":"month","enum":["day","month"],"type":"string"}},{"name":"time_zone","required":false,"in":"query","description":"Time Zone by which to aggregate the results.","schema":{"default":"America/Chicago","enum":["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/East-Saskatchewan","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","Pacific/Apia","Pacific/Auckland","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap"],"type":"string"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive). Defaults to the beginning of the current month.","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive). Defaults to midnight tonight.","schema":{"format":"date-time","type":"string"}},{"name":"types","required":false,"in":"query","description":"An array containing specific balance transaction types. The data will be filtered to include only transactions with a matching type property.","schema":{"type":"array","items":{"type":"string","enum":["charge","charge_failure_refund","dispute","dispute_won","refund","refund_failure","adjustment","commission","payout","payout_cancel","payout_failure","fee","platform_fee","platform_fee_refund","outbound_transfer","outbound_transfer_cancel","outbound_transfer_failure","charge_fee","refund_fee","account_fee","payment_method_fee","tilled_fee"]}}},{"name":"include_connected_accounts","required":false,"in":"query","description":"Whether or not to include the results from any connected accounts.","schema":{"default":false,"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BalanceTransactionsSummary"}}}}},"tags":["Balance Transactions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/balance-transactions/{id}":{"get":{"operationId":"GetBalanceTransaction","summary":"Get a Balance Transaction","description":"Retrieves the balance transaction with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BalanceTransaction"}}}}},"tags":["Balance Transactions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/charges/{id}":{"get":{"operationId":"GetCharge","summary":"Get a Charge","description":"Retrieves a Charge object.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Charge"}}}}},"tags":["Charges"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/checkout-sessions":{"post":{"operationId":"CreateCheckoutSession","summary":"Create a Checkout Session","description":"Creates a checkout session.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CheckoutSessionCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CheckoutSession"}}}}},"tags":["Checkout Sessions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListCheckoutSessions","summary":"List all Checkout Sessions","description":"Returns a list of checkout sessions.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","style":"deepObject","explode":true,"schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"payment_intent_id","required":false,"in":"query","description":"Only return the checkout session for the payment intent specified.","schema":{"type":"string"}},{"name":"customer_id","required":false,"in":"query","description":"Only return the checkout session for the customer specified.","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/CheckoutSession"}}},"required":["items"]}]}}}}},"tags":["Checkout Sessions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/checkout-sessions/{id}":{"get":{"operationId":"GetCheckoutSession","summary":"Get a Checkout Session","description":"Retrieves the details of a checkout session","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CheckoutSession"}}}}},"tags":["Checkout Sessions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/checkout-sessions/{id}/expire":{"post":{"operationId":"ExpireCheckoutSession","summary":"Expire a Checkout Session","description":"A checkout session can be expired when it is in one of these statuses: `open`\n\nAfter it expires, a customer can't complete the checkout session and will see a message about the expiration.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CheckoutSession"}}}}},"tags":["Checkout Sessions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/customers":{"post":{"operationId":"CreateCustomer","summary":"Create a Customer","description":"Customer objects allow you to track multiple charges that are associated with the same customer.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}},"tags":["Customers"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListCustomers","summary":"List all Customers","description":"Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","style":"deepObject","explode":true,"schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"q","required":false,"in":"query","description":"The partial search of text fields. Supports searching by `customer.first_name`, `customer.last_name`,\n`customer.email`, `customer.phone`","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Customer"}}},"required":["items"]}]}}}}},"tags":["Customers"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/customers/{id}":{"get":{"operationId":"GetCustomer","summary":"Get a Customer","description":"Retrieves the details of an existing customer.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}},"tags":["Customers"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"patch":{"operationId":"UpdateCustomer","summary":"Update a Customer","description":"Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}},"tags":["Customers"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteCustomer","summary":"Delete a Customer","description":"Permanently deletes a customer. It cannot be undone.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["Customers"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/disputes":{"get":{"operationId":"ListDisputes","summary":"List all Disputes","description":"Returns a list of existing disputes. The disputes are returned in sorted order, with the most recent disputes appearing first.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"charge_id","required":false,"in":"query","description":"Only returns disputes for the charge specified by this charge ID.","schema":{"type":"string"}},{"name":"include_connected_accounts","required":false,"in":"query","description":"Whether or not to include the results from any connected accounts.","schema":{"default":false,"type":"boolean"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"status","required":false,"in":"query","description":"String indicating the status to filter the result by.","schema":{"type":"array","items":{"type":"string","enum":["warning_needs_response","warning_under_review","warning_closed","needs_response","under_review","closed","won","lost"]}}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Dispute"}}},"required":["items"]}]}}}}},"tags":["Disputes"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/disputes/{id}":{"get":{"operationId":"GetDispute","summary":"Get a Dispute","description":"Retrieves the details of an existing dispute with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dispute"}}}}},"tags":["Disputes"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"post":{"operationId":"CreateDisputeEvidence","summary":"Create Dispute Evidence","description":"Provide evidence to challenge a dispute.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DisputeEvidenceCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dispute"}}}}},"tags":["Disputes"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/events":{"get":{"operationId":"ListEvents","summary":"List all Events","description":"List events, going back up to at least 30 days.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"types","required":false,"in":"query","description":"An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property.","schema":{"type":"array","items":{"type":"string","enum":["account.updated","charge.captured","charge.expired","charge.failed","charge.succeeded","charge.pending","charge.refunded","charge.refund.updated","charge.updated","customer.created","customer.deleted","customer.updated","dispute.created","dispute.updated","payment_intent.canceled","payment_intent.created","payment_intent.payment_failed","payment_intent.processing","payment_intent.requires_action","payment_intent.succeeded","payment_intent.amount_capturable_updated","payment_method.attached","payment_method.detached","payout.created","payout.failed","payout.paid","payout.updated","platform_fee.created","platform_fee.refunded","subscription.created","subscription.canceled","subscription.updated","report_run.succeeded","report_run.failed","outbound_transfer.pending","outbound_transfer.failed","outbound_transfer.canceled","outbound_transfer.succeeded"]}}},{"name":"object_id","required":false,"in":"query","description":"Id of related resource. The list will be filtered to include events that are related to the resource with this id.","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Event"}}},"required":["items"]}]}}}}},"tags":["Events"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/events/{id}":{"get":{"operationId":"GetEvent","summary":"Get an Event","description":"Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Event"}}}},"404":{"description":""}},"tags":["Events"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/files":{"post":{"operationId":"CreateFile","summary":"Create a File","description":"Creates a File","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/FileCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/File"}}}}},"tags":["Files"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListFiles","summary":"List all Files","description":"Returns a list of uploaded files","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"purposes","required":false,"in":"query","description":"A list of file purposes to filter on.","schema":{"type":"array","items":{"type":"string","enum":["logo","icon","dispute_evidence","onboarding_documentation"]}}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/File"}}},"required":["items"]}]}}}}},"tags":["Files"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/files/{id}":{"get":{"operationId":"GetFile","summary":"Get a File","description":"Retrieves the file with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/File"}}}}},"tags":["Files"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteFile","summary":"Delete a File","description":"Permanently delete a file","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["Files"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/files/{id}/contents":{"get":{"operationId":"GetContentsOfFile","summary":"Get the Contents of a File","description":"Gets the contents of a file with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"x-is-file":true,"description":"","content":{"application/octet-stream":{"schema":{"type":"string","format":"binary"}}}}},"tags":["Files"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/health":{"get":{"operationId":"GetHealth","summary":"Get the Overall Health of the API","description":"A status of `pass` is healthy, `warn` is healthy with concerns, and `fail` is unhealthy.\n\n*Note: a `503` HTTP response code will be returned for the `fail` status.*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthOutput"}}}}},"tags":["Health"]}},"/v1/outbound-transfers":{"post":{"operationId":"CreateOutboundTransfer","summary":"Create an Outbound Transfer","description":"If the creation request is successful, an OutboundTransfer object of status `pending` will be return.\n\nIf there is an error, an OutboundTransfer object with the status `failed` or an error is returned.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutboundTransferCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutboundTransfer"}}}}},"tags":["Outbound Transfers"],"security":[{"JWT":[]},{"TilledApiKey":[]}]},"get":{"operationId":"ListOutboundTransfers","summary":"List all Outbound Transfers","description":"Returns a list of outbound transfers.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","style":"deepObject","explode":true,"schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"status","required":false,"in":"query","description":"Only return OutboundTransfers whose status is included by this array. Example: `/v1/outbound-transfers?status=succeeded`","schema":{"type":"array","items":{"type":"string","enum":["canceled","failed","pending","succeeded"]}}},{"name":"include_connected_accounts","required":false,"in":"query","description":"Whether or not to include the results from any connected accounts.","schema":{"default":false,"type":"boolean"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/OutboundTransfer"}}},"required":["items"]}]}}}}},"tags":["Outbound Transfers"],"security":[{"JWT":[]},{"TilledApiKey":[]}]}},"/v1/outbound-transfers/{id}":{"get":{"operationId":"GetOutboundTransfer","summary":"Get an Outbound Transfer","description":"Retrieves the details of an outbound transfer.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutboundTransfer"}}}}},"tags":["Outbound Transfers"],"security":[{"JWT":[]},{"TilledApiKey":[]}]}},"/v1/outbound-transfers/{id}/cancel":{"post":{"operationId":"CancelOutboundTransfer","summary":"Cancel an Outbound Transfer","description":"An outbound transfer can be canceled only if its status is `pending` and funds have not yet been batched or paid out.\n\nIf the cancellation is successful, the OutboundTransfer object is returned.\n\nIf the outbound transfer cannot be canceled, an error is returned.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutboundTransfer"}}}}},"tags":["Outbound Transfers"],"security":[{"JWT":[]},{"TilledApiKey":[]}]}},"/v1/payment-intents":{"post":{"operationId":"CreatePaymentIntent","summary":"Create a Payment Intent","description":"After the PaymentIntent is created, attach a payment method and confirm to continue the payment. You can read more about the different payment flows available via the Payment Intents API here<TBD>.\n\nWhen `confirm=true` is used during creation, it is equivalent to creating and confirming the PaymentIntent in the same call. You may use any parameters available in the confirm API when `confirm=true` is supplied.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntentCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntent"}}}}},"tags":["PaymentIntents"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListPaymentIntents","summary":"List all Payment Intents","description":"Returns a list of PaymentIntents.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","style":"deepObject","explode":true,"schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"status","required":false,"in":"query","description":"Only return PaymentIntents whose status is included by this array. Examples: `/v1/payment-intents?status=succeeded,requires_payment_method` and `/v1/payment-intents?status=succeeded&status=requires_payment_method`.","schema":{"type":"array","items":{"type":"string","enum":["canceled","processing","requires_action","requires_capture","requires_confirmation","requires_payment_method","succeeded"]}}},{"name":"include_connected_accounts","required":false,"in":"query","description":"Whether or not to include the results from any connected accounts.","schema":{"default":false,"type":"boolean"}},{"name":"subscription_id","required":false,"in":"query","description":"The ID of the subscription whose payment intents will be retrieved.","schema":{"type":"string"}},{"name":"q","required":false,"in":"query","description":"Supports searching by `payment_intent.id`, `payment_intent.amount`, `payment_method.billing_details.name`,\n`payment_method.details.last4`, `payment_method.details.last2`, `customer.first_name`, `customer.last_name`","schema":{"type":"string"}},{"name":"customer_id","required":false,"in":"query","description":"The ID of the customer whose payment intents will be retrieved.","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/PaymentIntent"}}},"required":["items"]}]}}}}},"tags":["PaymentIntents"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-intents/{id}":{"get":{"operationId":"GetPaymentIntent","summary":"Get a Payment Intent","description":"Retrieves the details of a PaymentIntent that has previously been created.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntent"}}}}},"tags":["PaymentIntents"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"patch":{"operationId":"UpdatePaymentIntent","summary":"Update a Payment Intent","description":"Updates properties on a PaymentIntent object without confirming.\n\nDepending on which properties you update, you may need to confirm the PaymentIntent again.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntentUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntent"}}}}},"tags":["PaymentIntents"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-intents/{id}/cancel":{"post":{"operationId":"CancelPaymentIntent","summary":"Cancel a Payment Intent","description":"A PaymentIntent object can be canceled when it is in one of these statuses: `requires_payment_method`, `requires_capture`, `requires_confirmation`, or `requires_action`.\n\nOnce canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntentCancelParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntent"}}}}},"tags":["PaymentIntents"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-intents/{id}/capture":{"post":{"operationId":"CapturePaymentIntent","summary":"Capture a Payment Intent","description":"Capture the funds of an existing uncaptured PaymentIntent when its status is `requires_capture`.\nUncaptured PaymentIntents will be canceled exactly 7 days after they are created.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntentCaptureParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntent"}}}}},"tags":["PaymentIntents"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-intents/{id}/confirm":{"post":{"operationId":"ConfirmPaymentIntent","summary":"Confirm a Payment Intent","description":"Confirm that your customer intends to pay with current or provided payment method. Upon confirmation, the PaymentIntent will attempt to initiate a payment.\n\nIf the selected payment method requires additional steps, the PaymentIntent will transition to the `requires_action` status. If payment fails, the PaymentIntent will transition to the `requires_payment_method` status. If payment succeeds, the PaymentIntent will transition to the `succeeded` status (or `requires_capture`, if `capture_method` is set to `manual`).\n\nPayment may be attempted using our `tilled.js` and the PaymentIntent’s `client_secret`.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntentConfirmParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentIntent"}}}}},"tags":["PaymentIntents"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-methods":{"post":{"operationId":"CreatePaymentMethod","summary":"Create a Payment Method","description":"Creates a PaymentMethod object. Read the [Tilled.js reference](#section/Tilled.js) to learn how to create PaymentMethods via Tilled.js. One of the following is required to create a payment method: `card`, `payment_token`, `ach_debit`, or `eft_debit`.\n\nNote: If you would like to use this endpoint to submit raw cardholder data directly to Tilled's API (and not use Tilled.js), you must first submit your PCI Attestation of Compliance (AOC) to Tilled that shows you are currently compliant with the applicable PCI/DSS requirements. Please contact integrations@tilled.com for information on how to submit your documentation.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethod"}}}}},"tags":["PaymentMethods"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListPaymentMethods","summary":"List a Customer's Payment Methods","description":"Returns a list of PaymentMethods for a given Customer.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"type","required":true,"in":"query","description":"Only return payment methods of the given type.","schema":{"enum":["card","ach_debit","eft_debit"],"type":"string"}},{"name":"customer_id","required":true,"in":"query","description":"Customer identifier","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/PaymentMethod"}}},"required":["items"]}]}}}}},"tags":["PaymentMethods"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-methods/ach-debit-token":{"post":{"operationId":"CreateAchDebitSingleUseToken","summary":"Create an ACH Debit Single-Use Token","description":"Creates an ACH Debit Single-Use Token, for use in creating a PaymentMethod.","deprecated":true,"parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodCreateAchDebitSingleUseTokenParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AchDebitSingleUseToken"}}}}},"tags":["PaymentMethods"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-methods/{id}":{"get":{"operationId":"GetPaymentMethod","summary":"Get a Payment Method","description":"Retrieves a PaymentMethod object.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethod"}}}}},"tags":["PaymentMethods"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"patch":{"operationId":"UpdatePaymentMethod","summary":"Update a Payment Method","description":"Updates a PaymentMethod object. A PaymentMethod must be attached to a customer to be updated.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethod"}}}}},"tags":["PaymentMethods"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-methods/{id}/attach":{"put":{"operationId":"AttachPaymentMethodToCustomer","summary":"Attach a Payment Method to a Customer","description":"Attaches a PaymentMethod to a Customer. This effectively changes the payment method from single-use to reusable.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethodAttachParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethod"}}}}},"tags":["PaymentMethods"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payment-methods/{id}/detach":{"put":{"operationId":"DetachPaymentMethodFromCustomer","summary":"Detach a Payment Method from a Customer","description":"Detaches a PaymentMethod from a Customer. Once a payment method is detached it can no longer be used to make a charge.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentMethod"}}}}},"tags":["PaymentMethods"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payouts":{"get":{"operationId":"ListPayouts","summary":"List all Payouts","description":"Returns a list of existing payouts. The payouts are returned in sorted order, with the most recent\npayouts appearing first.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive). Cannot be paired with paid_at_gte or paid_at_lte.","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive). Cannot be paired with paid_at_gte or paid_at_lte.","schema":{"format":"date-time","type":"string"}},{"name":"paid_at_gte","required":false,"in":"query","description":"Minimum `paid_at` value to filter by (inclusive). Cannot be paired with created_at_gte or created_at_lte.","schema":{"format":"date-time","type":"string"}},{"name":"paid_at_lte","required":false,"in":"query","description":"Maximum `paid_at` value to filter by (inclusive). Cannot be paired with created_at_gte or created_at_lte.","schema":{"format":"date-time","type":"string"}},{"name":"status","required":false,"in":"query","description":"Only return payouts that have the given status.","schema":{"enum":["canceled","failed","in_transit","paid","pending"],"type":"string"}},{"name":"include","required":false,"in":"query","description":"An array of optional include parameters, specifying extra properties to return. Currently for this endpoint only accepts 'transaction_count'. In the query parameters, this is specified as include=value1,value2,value3,etc.","schema":{"enum":["transaction_count"],"type":"string"}},{"name":"include_connected_accounts","required":false,"in":"query","description":"Whether or not to include the results from any connected accounts.","schema":{"default":false,"type":"boolean"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Payout"}}},"required":["items"]}]}}}}},"tags":["Payouts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/payouts/{id}":{"get":{"operationId":"GetPayout","summary":"Get a Payout","description":"Retrieves the details of an existing payout with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"include","required":false,"in":"query","description":"An array of optional include parameters, specifying extra properties to return. Currently for this endpoint only accepts 'transaction_count'. In the query parameters, this is specified as include=value1,value2,value3,etc.","deprecated":true,"schema":{"type":"array","items":{"enum":["transaction_count"],"type":"string"}}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Payout"}}}}},"tags":["Payouts"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/platform-fees":{"get":{"operationId":"ListPlatformFees","summary":"List all Platform Fees","description":"Returns a list of platform fees you've previously collected. The platform fees are returned in a sorted order, with the most recent fees appearing first.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"created_at_gte","required":false,"in":"query","description":"Minimum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"created_at_lte","required":false,"in":"query","description":"Maximum `created_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"charge_id","required":false,"in":"query","description":"Only return application fees for the charge specified by this charge id.","schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/PlatformFee"}}},"required":["items"]}]}}}}},"security":[{"TilledApiKey":[]},{"JWT":[]}],"tags":["Platform Fees"]}},"/v1/platform-fees/{id}":{"get":{"operationId":"GetPlatformFee","summary":"Get a Platform Fee","description":"Retrieves the details of a platform fee that your account has collected. The same information is returned when when refunding the application fee.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlatformFee"}}}}},"security":[{"TilledApiKey":[]},{"JWT":[]}],"tags":["Platform Fees"]}},"/v1/platform-fees/{id}/refunds/{refund_id}":{"get":{"operationId":"GetPlatformFeeRefund","summary":"Get a Platform Fee Refund","description":"Retrieves the details of a specific refund stored on the platform fee.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"refund_id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlatformFeeRefund"}}}}},"security":[{"TilledApiKey":[]},{"JWT":[]}],"tags":["Platform Fee Refunds"]}},"/v1/pricing-templates":{"get":{"operationId":"ListPricingTemplates","summary":"List all Pricing Templates","description":"Returns a list of pricing templates. These are the pricing templates that are available to be assigned to `merchant` accounts during onboarding.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"type","required":false,"in":"query","description":"String indicating the type to filter the result by.","schema":{"enum":["card","ach_debit","eft_debit"],"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/PricingTemplate"}}},"required":["items"]}]}}}}},"tags":["Pricing Templates"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/pricing-templates/{id}":{"get":{"operationId":"GetPricingTemplate","summary":"Get a Pricing Template","description":"Retrieves the details of the pricing template with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PricingTemplate"}}}}},"tags":["Pricing Templates"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/product-codes":{"get":{"operationId":"ListProductCodes","summary":"List an Account's Product Codes","description":"*Deprecated: Use Pricing Templates to configure merchant accounts during onboarding.*\n\nReturns a list of ProductCodes available to a given `partner` account. These are the product codes that are available to be assigned to `merchant` accounts during merchant onboarding.","deprecated":true,"parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ProductCode"}}},"required":["items"]}]}}}}},"tags":["ProductCodes"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/refunds":{"post":{"operationId":"CreateRefund","summary":"Create a Refund","description":"When you create a new refund, you must specify a PaymentIntent object on which to create it.\n\nCreating a new refund will refund a charge that has previously been created but not yet refunded. Funds will be refunded to the original payment method.\n\nYou can optionally refund only part of a charge. You can do so multiple times, until the entire charge has been refunded.\n\nOnce entirely refunded, a charge can't be refunded again. This method will throw an error when called on an already-refunded charge, or when trying to refund more money than is left on a charge.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Refund"}}}}},"tags":["Refunds"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListRefunds","summary":"List all Refunds","description":"Returns a list of Refunds. The refunds are returned in a sorted order, with the most recent refunds appearing first.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","style":"deepObject","explode":true,"schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Refund"}}},"required":["items"]}]}}}}},"tags":["Refunds"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/refunds/{id}":{"get":{"operationId":"GetRefund","summary":"Get a Refund","description":"Retrieves the details of an existing refund.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Refund"}}}}},"tags":["Refunds"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/report-runs":{"post":{"operationId":"CreateReportRun","summary":"Create a Report Run","description":"Creates a Report Run","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReportRunCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReportRun"}}}}},"tags":["ReportRuns"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListReportRuns","summary":"List all Report Runs","description":"Returns a list of report runs","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"type","required":false,"in":"query","description":"Only return ReportRuns whose type is included by this array. Examples: `?type=payments_summary_1,payouts_summary_2` and `?type=payouts_summary_2`.","schema":{"type":"array","items":{"type":"string","enum":["payments_summary_1","payouts_summary_1","payouts_summary_2","fees_summary_1","processing_summary_1","disputes_summary_1"]}}},{"name":"status","required":false,"in":"query","description":"Only return ReportRuns whose status is included by this array. Examples: `?status=finished` and `?status=finished,queued`.","schema":{"type":"array","items":{"type":"string","enum":["queued","finished","failed"]}}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReportRunRetrieveParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/ReportRun"}}},"required":["items"]}]}}}}},"tags":["ReportRuns"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/report-runs/{id}":{"get":{"operationId":"GetReportRun","summary":"Get a Report Run","description":"Retrieves the report run with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReportRun"}}}}},"tags":["ReportRuns"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/subscriptions":{"post":{"operationId":"CreateSubscription","summary":"Create a Subscription","description":"Creates a new subscription on an existing customer.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListSubscriptions","summary":"List all Subscriptions","description":"Returns a list of your subscriptions.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"metadata","required":false,"in":"query","description":"`metadata` key-value pairs to filter by. Only exact matches on the key-value pair(s) will be returned. Example: `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.","style":"deepObject","explode":true,"schema":{"additionalProperties":{"type":"string"},"type":"object"}},{"name":"customer_id","required":false,"in":"query","description":"The ID of the customer whose subscriptions will be retrieved.","schema":{"type":"string"}},{"name":"status","required":false,"in":"query","description":"The status of the subscriptions to retrieve.","schema":{"enum":["active","canceled","past_due","paused","pending"],"type":"string"}},{"name":"next_payment_at_lte","required":false,"in":"query","description":"Maximum `next_payment_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"next_payment_at_gte","required":false,"in":"query","description":"Minimum `next_payment_at` value to filter by (inclusive).","schema":{"format":"date-time","type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Subscription"}}},"required":["items"]}]}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/subscriptions/{id}":{"patch":{"operationId":"UpdateSubscription","summary":"Update a Subscription","description":"Update an existing subscription to match the specified parameters.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"GetSubscription","summary":"Get a Subscription","description":"Retrieves the subscription with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/subscriptions/{id}/cancel":{"post":{"operationId":"CancelSubscription","summary":"Cancel a Subscription","description":"Cancels a customer's subscription immediately. The customer will not be charged again for the subscription.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/subscriptions/{id}/pause":{"post":{"operationId":"PauseSubscription","summary":"Pause a Subscription","description":"Pauses a subscription from generating payments until the (optionally) specified `resumes_at` date.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionPauseParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/subscriptions/{id}/resume":{"post":{"operationId":"ResumeSubscription","summary":"Resume a Subscription","description":"Resumes a paused subscription immediately. The next charge will occur on the normally scheduled billing cycle.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/subscriptions/{id}/retry":{"post":{"operationId":"RetrySubscription","summary":"Retry a Subscription","description":"Retry a subscription payment at the (optionally) specified `next_payment_at` date.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionRetryParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}}},"tags":["Subscriptions"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/user-invitations":{"post":{"operationId":"CreateUserInvitation","summary":"Create a User Invitation","description":"Creates a user invitation that is subsequently sent to the specified\n`email`. Once the user registers for an account, the invitation is deleted.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInvitationCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInvitation"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListUserInvitations","summary":"List all User Invitations","description":"Returns a list of your account's user invitations.","parameters":[{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}},{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/UserInvitation"}}},"required":["items"]}]}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/user-invitations/check/{id}":{"get":{"operationId":"CheckUserInvitation","summary":"Check a User Invitation","description":"Checks the existence of the user invitation with the given ID.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInvitationCheck"}}}}},"tags":["Users"]}},"/v1/user-invitations/{id}":{"get":{"operationId":"GetUserInvitation","summary":"Get a User Invitation","description":"Retrieves the user invitation with the given ID.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInvitation"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteUserInvitation","summary":"Delete a User Invitation","description":"Permanently deletes a user invitation.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/user-invitations/{id}/resend":{"post":{"operationId":"ResendUserInvitation","summary":"Resend a User Invitation","description":"Resends the user invitation with the given ID.","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}},{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserInvitation"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/users":{"post":{"operationId":"CreateUser","summary":"Create a User","description":"Creates a user.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListUsers","summary":"List all Users","description":"Returns a list of your account's users.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/User"}}},"required":["items"]}]}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/users/{id}":{"get":{"operationId":"GetUser","summary":"Get a User","description":"Retrieves the user with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"patch":{"operationId":"UpdateUser","summary":"Update a User","description":"Updates the user. Any parameters not provided will be left unchanged.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteUser","summary":"Delete a User","description":"Permanently deletes a user. It cannot be undone.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["Users"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/webhook-endpoints":{"post":{"operationId":"CreateWebhookEndpoint","summary":"Create a Webhook Endpoint","description":"A webhook endpoint must have a url and a list of enabled_events. The specified url will be notified about events from all connected accounts along with your account.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookEndpointCreateParams"}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookEndpoint"}}}}},"tags":["WebhookEndpoints"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"get":{"operationId":"ListWebhookEndpoints","summary":"List all Webhook Endpoints","description":"Returns a list of your webhook endpoints.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"offset","required":false,"in":"query","description":"The (zero-based) offset of the first item in the collection to return.","schema":{"minimum":0,"default":0,"type":"number"}},{"name":"limit","required":false,"in":"query","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.","schema":{"minimum":1,"maximum":100,"default":30,"type":"number"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PaginatedDto"},{"properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/WebhookEndpoint"}}},"required":["items"]}]}}}}},"tags":["WebhookEndpoints"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}},"/v1/webhook-endpoints/{id}":{"get":{"operationId":"GetWebhookEndpoint","summary":"Get a Webhook Endpoint","description":"Retrieves the webhook endpoint with the given ID.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookEndpoint"}}}}},"tags":["WebhookEndpoints"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"patch":{"operationId":"UpdateWebhookEndpoint","summary":"Update a Webhook Endpoint","description":"Updates the webhook endpoint. Any parameters not provided will be left unchanged.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookEndpointUpdateParams"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookEndpoint"}}}}},"tags":["WebhookEndpoints"],"security":[{"TilledApiKey":[]},{"JWT":[]}]},"delete":{"operationId":"DeleteWebhookEndpoint","summary":"Delete a Webhook Endpoint","description":"Delete a webhook endpoint.","parameters":[{"name":"tilled-account","in":"header","description":"The id of the Tilled Account (usually starting with the prefix `acct_`) that the request is performed on behalf of.","required":true,"schema":{"type":"string"}},{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"204":{"description":"","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["WebhookEndpoints"],"security":[{"TilledApiKey":[]},{"JWT":[]}]}}},"info":{"title":"Tilled API","description":"The Tilled API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).\nOur API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n\nYou can use the Tilled API in test mode, which does not affect your live data or interact with the banking networks.\nThe API key you use to authenticate the request determines whether the request is live mode or test mode.\nBefore your account is activated you will only be able to interact with test mode.\n\nAuthentication uses a standard web token schema.\n\n**Notice**: The Tilled API treats HTTP status `401` to mean `Unauthenticated`\nand not the HTTP standard name of `Unauthorized`.\nRequests made for materials the requester does not have permission to access, the API will respond with `403: Forbidden`.\n\n# Authentication\n\nThe tilled API uses API keys to authenticate requests. You can view and manage your API keys in the\nTilled Dashboard.\n\nTest mode secret keys have the prefix sk*test* and live mode secret keys have the prefix sk*live*.\nAlternatively, you can use restricted API keys for granular permissions.\n\nYour API keys carry many privileges, so be sure to keep them secure! Do not share your secret API keys\nin publicly accessible areas such as GitHub, client-side code, and so forth.\n\nAuthentication to the API is performed via custom HTTP Header `tilled-api-key`. Provide your API key as the value.\n\nAll API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests\nwithout authentication will also fail.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n# Errors\n\nTilled uses conventional HTTP response codes to indicate the success or failure of an API request.\nIn general: Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate an error\nthat failed given the information provided (e.g., a required parameter was omitted, a charge failed,\netc.). Codes in the `5xx` range indicate an error with Tilled's servers (these are rare).\n\nSome `4xx` errors that could be handled programmatically (e.g., a card is declined)\ninclude an error code that briefly explains the error reported.\n\n# Request IDs\n\nEach API request has an associated request identifier. You can find this value in the response headers, under `request-id`. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n# Metadata\n\nUpdatable Tilled objects—including [Account](#tag/Accounts), [Customer](#tag/Customers), [PaymentIntent](#tag/PaymentIntents), [Refund](#tag/Refunds), and [Subscription](#tag/Subscriptions)—have a `metadata` parameter. You can use this parameter to attach key-value data to these Tilled objects.\n\nYou can specify up to 50 keys, with key names up to 40 characters long and values up to 500 characters long.\n\nMetadata is useful for storing additional, structured information on an object. As an example, you could store your user's full name and corresponding unique identifier from your system on a Tilled [Customer](#tag/Customers) object. Metadata is not used by Tilled—for example, not used to authorize or decline a charge—and won't be seen by your users unless you choose to show it to them. Do not store any sensitive information (bank account numbers, card details, etc.) as metadata.\n\n# Apple Pay\n\nTilled supports Apple Pay through the Tilled.js [`PaymentRequest`](https://docs.tilled.com/tilledjs/#paymentrequest-ie-apple-pay) object.\n\nIn order to start accepting payments with Apple Pay, you will first need to validate the domains you plan to host the Apple Pay Button on by:\n\n- Hosting Tilled's Apple Domain Verification File on the domain\n- Use the Tilled API to register the domain\n\n## Domain Verification File\n\nDomains hosting an Apple Pay Button must be secured with HTTPS (TLS 1.2 or later) and have a valid SSL certificate.\n\nBefore [registering your domain](#operation/CreateApplePayDomain) with the Tilled API, you need to host Tilled's [Apple Domain Verification File](https://api.tilled.com/apple-developer-merchantid-domain-association) on the domain at the path: `/.well-known/apple-developer-merchantid-domain-association`\n\n# Tilled.js\n\nTilled.js is the easiest way to get started collecting payments. It allows you to embed a payments form in your application and stores credit card information securely on remote servers instead of passing through your network. View the documentation [here](https://docs.tilled.com/tilledjs/).\n\n# Webhooks\n\n## Receive event notifications with webhooks\n\nListen for events on your Tilled account so your integration can automatically trigger reactions.\n\nTilled uses webhooks to notify your application when an event happens in your account. Webhooks are particularly useful for asynchronous events like when a customer’s bank confirms a payment, a customer disputes a charge, or a recurring payment succeeds.\n\nBegin using webhooks with your Tilled integration in just a couple steps:\n\n- Create a webhook endpoint on your server.\n- Register the endpoint with Tilled to go live.\n\nNot all Tilled integrations require webhooks. Keep reading to learn more about what webhooks are and when you should use them.\n\n### What are webhooks\n\n_Webhooks_ refers to a combination of elements that collectively create a notification and reaction system within a larger integration.\n\nMetaphorically, webhooks are like a phone number that Tilled calls to notify you of activity in your Tilled account. The activity could be the creation of a new customer or the payout of funds to your bank account. The webhook endpoint is the person answering that call who takes actions based upon the specific information it receives.\n\nNon-metaphorically, the webhook endpoint is just more code on your server, which could be written in Ruby, PHP, Node.js, or whatever. The webhook endpoint has an associated URL (e.g., https://example.com/webhooks). The Tilled notifications are Event objects. This Event object contains all the relevant information about what just happened, including the type of event and the data associated with that event. The webhook endpoint uses the event details to take any required actions, such as indicating that an order should be fulfilled.\n\n### When to use webhooks\n\nMany events that occur within a Tilled account have synchronous results–immediate and direct–to an executed request. For example, a successful request to create a customer immediately returns a Customer object. Such requests don’t require webhooks, as the key information is already available.\n\nOther events that occur within a Tilled account are asynchronous: happening at a later time and not directly in response to your code’s execution. Most commonly these involve:\n\n- The [Payment Intents API](#tag/PaymentIntents)\n\nWith these and similar APIs, Tilled needs to notify your integration about changes to the status of an object so your integration can take subsequent steps.\n\nThe specific actions your webhook endpoint may take differs based upon the event. Some examples include:\n\n- Updating a customer’s membership record in your database when a subscription payment succeeds\n- Logging an accounting entry when a transfer is paid\n- Indicating that an order can be fulfilled (i.e., boxed and shipped)\n\n## Verifying signatures manually\n\nThe `tilled-signature` header included in each signed event contains a timestamp and one or more signatures. The timestamp is prefixed by `t=`, and each signature is prefixed by a `scheme`. Schemes start with `v`, followed by an integer. Currently, the only valid live signature scheme is `v1`.\n\n```\ntilled-signature:t=1614049713663,v1=8981f5902896f479fa9079eec71fca01e9a065c5b59a96b221544023ce994b02\n```\n\nTilled generates signatures using a hash-based message authentication code ([HMAC](https://en.wikipedia.org/wiki/Hash-based_message_authentication_code)) with [SHA-256](https://en.wikipedia.org/wiki/SHA-2). You should ignore all schemes that are not `v1`.\n\nYou can verify the webhook event signature by following these steps.\n\n### Step 1: Extract the timestamp and signatures from the header\n\nSplit the header, using the `,` character as the separator, to get a list of elements. Then split each element, using the `=` character as the separator, to get a prefix and value pair.\n\nThe value for the prefix `t` corresponds to the timestamp, and `v1` corresponds to the signature (or signatures). You can discard all other elements.\n\n### Step 2: Prepare the signed_payload string\n\nThe `signed_payload` string is created by concatenating:\n\n- The timestamp (as a string)\n- The character `.`\n- The actual JSON payload (i.e., the request body)\n\n### Step 3: Determine the expected signature\n\nCompute an HMAC with the SHA256 hash function. Use the endpoint’s signing secret as the key, and use the `signed_payload` string as the message.\n\n### Step 4: Compare the signatures\n\nCompare the signature (or signatures) in the header to the expected signature. For an equality match, compute the difference between the current timestamp and the received timestamp, then decide if the difference is within your tolerance.\n\nTo protect against timing attacks, use a constant-time string comparison to compare the expected signature to each of the received signatures.\n","version":"1.0","contact":{"name":"Tilled API Support","url":"https://www.tilled.com/contact-us/","email":"integrations@tilled.com"},"x-logo":{"url":"https://docs.tilled.com/images/api_logo.png","backgroundColor":"#FFFFFF","altText":"Tilled logo"}},"tags":[{"name":"Accounts","description":"An Account can represent a merchant or partner. You can retrieve and manage Account properties such as email address."},{"name":"API Keys","description":"You access the Tilled API using *API Keys* that represent the required credentials necessary to authenticate. API Keys can be provisioned and revoked through the API or the dashboard."},{"name":"Auth Links","description":"Auth links provide access to a partner or merchant account via a link with authentication encoded in the url."},{"name":"Balance Transactions","description":"Balance transactions represent funds moving through your Tilled Account. They are created for every type of transaction that comes into or flows out of your Tilled account balance."},{"name":"Bank Accounts","description":"Bank Accounts are currently used as transfer destinations (e.g. Payouts) on `Account` objects."},{"name":"Charges","description":"A Charge is an action taken on a debit or credit card. You can place Charges, review them or refund them."},{"name":"Checkout Sessions","description":"A Checkout Session represents your customer's session as they pay for one-time purchases. We recommend creating a new Session each time your customer attempts to pay. Once a payment is successful, the Checkout Session will contain a reference to the Customer and the successful Payment Intent."},{"name":"Customers","description":"A Customer belongs to an Account and represents the person being charged. You can add, retrieve or update Customer data such as Payment Methods."},{"name":"Disputes","description":"Disputes allow you view retrievals and chargebacks issued against your account."},{"name":"Events","description":"Events are our way of letting you know when something interesting happens in your account. When an interesting event occurs, we create a new *Event* object. For example, when a charge succeeds, we create a *charge.succeeded* event. Note that many API requests may cause multiple events to be created. As with other API resources, you can use endpoints to retrieve an individual event or a list of events from the API. We also have a separate webhooks system for sending the *Event* directly to an endpoint on your server. Webhooks are managed in your account settings."},{"name":"Files","description":"Files can be uploaded to for managing Logos and Icons for branding purposes."},{"name":"Health","description":"Health allows you to verify the availability of the Tilled API."},{"name":"Onboarding","description":"Onboarding allows you to add new Merchant accounts under your Partner account."},{"name":"Outbound Transfers","description":"Outbound Transfers allow a merchant to send an amount of funds directly to an external (customer) bank account."},{"name":"PaymentIntents","description":"A Payment Intent is initiated server side to begin the transaction process. The Payment Intent should be created as early as possible in the transaction process. It can be updated as needed, for example when a Customer adds a new item to their basket. Payment Intents can be associated with multiple Payment Methods or Charges"},{"name":"PaymentMethods","description":"Payment Methods are associated with a Customer and used to satisfy Payment Intents."},{"name":"Payouts","description":"A Payout object is created when you receive funds from Tilled. You can retrieve individual payouts and list all payouts. To retrieve the  Balance Transactions associated with a given payout for reconciliation purposes, pass the `payout_id` to `/balance_transactions`."},{"name":"Platform Fees","description":"When you collect a transaction fee on top of a charge made for your user, a `Platform Fee` object is created in your account. You can list, retrieve, and refund platform fees."},{"name":"Platform Fee Refunds","description":"`Platform Fee Refund` objects allow you to refund a platform fee that has previously been created by not yet refunded. Funds will be refunded to the Tilled account from which the fee was originally collected."},{"name":"ProductCodes","description":"Product Codes represent the processing fee structure by which each transaction will be subject to. Example: *2.90% | $0.30 TXN | $10 CHBK/Reversals/Retrievals | $0 Monthly*. `partner` accounts will assign product codes to `merchant` accounts during the merchant onboarding process."},{"name":"Refunds","description":"Refund objects allow you to refund a charge that has previously been created but not yet refunded. Funds will be refunded to the payment method that was originally charged."},{"name":"Subscriptions","description":"Subscriptions allow you to charge a customer on a recurring basis."},{"name":"Users","description":"Users can log into the Tilled Dashboard and authenticate for various requests."},{"name":"WebhookEndpoints","description":"You can configure webhook endpoints via the API to be notified about events that happen in your Tilled account or connected accounts. Most users configure webhooks from the dashboard, which provides a user interface for registering and testing your webhook endpoints."}],"servers":[{"url":"https://api.tilled.com","description":"Production"},{"url":"https://sandbox-api.tilled.com","description":"Sandbox"}],"components":{"securitySchemes":{"TilledApiKey":{"type":"apiKey","in":"header","name":"tilled-api-key","description":"Tilled uses API keys to authenticate requests. You can view and manage your API keys in the Tilled Dashboard."},"JWT":{"scheme":"bearer","bearerFormat":"JWT","type":"http","description":"You can create a JSON Web Token (JWT) via our LOGIN resource. Usage format: `Bearer <JWT>`"}},"schemas":{"AccessTokenRefreshParams":{"type":"object","properties":{"refresh_token":{"type":"string","description":"The bcrypted refresh token data."}},"required":["refresh_token"]},"Account":{"type":"object","properties":{"bank_accounts":{"description":"Bank accounts attached to this account. Primarily used for payouts.","type":"array","items":{"$ref":"#/components/schemas/BankAccount"}},"business_profile":{"description":"The Business Profile for this account.","allOf":[{"$ref":"#/components/schemas/BusinessProfile"}]},"capabilities":{"description":"Capabilities represent the assigned product codes to a given merchant account and their status.","type":"array","items":{"$ref":"#/components/schemas/AccountCapability"}},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"email":{"type":"string","description":"The primary user's email address."},"id":{"type":"string","description":"Unique identifier for the object."},"merchant_support":{"type":"boolean","description":"Whether Tilled is providing support for this account.","deprecated":true},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"name":{"type":"string","description":"The business name or individual name."},"settings":{"description":"The account settings object.","allOf":[{"$ref":"#/components/schemas/AccountSettings"}]},"terminal_readers":{"description":"Terminal Readers attached to this account.","type":"array","items":{"$ref":"#/components/schemas/TerminalReader"}},"type":{"description":"The Tilled account type. Can be `partner` or `merchant`.","enum":["partner","merchant"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"},"white_label_domain":{"type":"string","description":"The `partner` white label domain."}},"required":["bank_accounts","created_at","id","terminal_readers","type","updated_at"]},"AccountCapability":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the object."},"onboarding_application_progress":{"type":"number","description":"The percentage of required fields completed in the onboarding application."},"onboarding_application_url":{"type":"string","description":"The URL for the merchant's onboarding application."},"pricing_template":{"description":"The pricing applied to/associated with this account.","allOf":[{"$ref":"#/components/schemas/PricingTemplate"}]},"product_code":{"description":"*Deprecated: See `pricing_template` for account details.*\n\nThe product code applied to/associated with this account.","deprecated":true,"allOf":[{"$ref":"#/components/schemas/ProductCode"}]},"requirements_errors":{"description":"The fields that need to be collected again because validation failed for some reason.","type":"array","items":{"$ref":"#/components/schemas/AccountRequirementsError"}},"status":{"description":"Status of the associated product code as part of the onboarding process. Only the `active` status represents that payments can be handled by this account for this given product code.\n\n`created` The capability has been created but no further action taken. Generally, this is the state of all capabilities when a merchant has been created but the onboarding process has not yet started.\n\n`started` The onboarding process has been started but not yet submitted.\n\n`submitted` The onboarding process for this product code has been submitted.\n\n`active` This associated product code is active for payments on this account.\n\n`disabled` This associated product code is not valid for payments on this account.","enum":["created","started","submitted","active","disabled","in_review","rejected","withdrawn"],"type":"string"}},"required":["id","onboarding_application_progress","pricing_template","product_code","requirements_errors","status"]},"AccountCapabilityCreateParams":{"type":"object","properties":{"pricing_template_id":{"type":"string","description":"The PricingTemplate id defining the capability to add to the account. Merchant accounts may only have 1 capability per `payment_method_type`."}},"required":["pricing_template_id"]},"AccountCapabilityUpdateParams":{"type":"object","properties":{"pricing_template_id":{"type":"string","description":"The PricingTemplate id defining the capability to add to the account. Merchant accounts may only have 1 capability per `payment_method_type`."}},"required":["pricing_template_id"]},"AccountCreateParams":{"type":"object","properties":{"bank_account":{"description":"A bank account to attach to this account for receiving payouts. (Note: currently this is only used for `partner` account payouts)\n\nBy default, providing a bank account sets it as the new default bank account for its currency.","allOf":[{"$ref":"#/components/schemas/BankAccountCreateParams"}]},"email":{"type":"string","description":"The primary user's email address."},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"name":{"type":"string","description":"The business name or individual name.","pattern":"/^[^<>;]*$/"},"pricing_template_ids":{"description":"An array of Pricing Template ids to associate with the `merchant` account. This is ignored for `partner` accounts. Only 1 pricing template per `payment_method_type` is allowed. For example, only 1 `card` and 1 `ach_debit`  template may be submitted for a given merchant. You cannot specify 2 templates of type `card` for a single merchant. You should create a separate merchant account in that case.\n\n*Note: Pass an empty array to configure without pricing for now, pricing must be specified before an onboarding application is made available*","type":"array","items":{"type":"string"}},"product_code_ids":{"description":"*Deprecated: Use `pricing_template_ids` to specify merchant pricing.*\n\nAn array of ProductCode ids to associate with the `merchant` account. This is ignored for `partner` accounts. Only 1 product code per `payment_method_type` is allowed. For example, only 1 `card` and 1 `ach_debit` may be submitted for a given merchant. You cannot specify 2 product codes of type `card` for a single merchant. You should create a separate merchant account in that case.\n\n*Note: If your account contains multiple product codes for a given payment method type, then you must explicitly specify the one you want to use. If your account only contains a single product code per payment method type then those values will be the default. If your account is enabled to process in both the United States and Canada, new merchant accounts will be configured with US product codes if no value is specified for `product_code_ids`.*","deprecated":true,"type":"array","items":{"type":"string"}},"settings":{"description":"Account Settings","allOf":[{"$ref":"#/components/schemas/AccountSettingsCreateParams"}]}},"required":["email"]},"AccountRequirementsError":{"type":"object","properties":{"reason":{"type":"string","description":"The informative message that indicates the error type and additional details about the error."},"requirement":{"type":"string","description":"The specific account onboarding requirement field that needs to be resolved."}},"required":["reason","requirement"]},"AccountSettings":{"type":"object","properties":{"branding":{"description":"The account branding settings.","allOf":[{"$ref":"#/components/schemas/AccountSettingsBranding"}]}}},"AccountSettingsBranding":{"type":"object","properties":{"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"global_email_notifications":{"type":"boolean","description":"Turn on or off email notifications for all merchants by default. Individual merchants can override these settings later. Defaults to true."},"logo":{"$ref":"#/components/schemas/File"},"primary_color":{"type":"string","description":"The primary hexadecimal color value."},"secondary_color":{"type":"string","description":"The secondary hexadecimal color value."},"support_email":{"type":"string","description":"Partner's support email address"},"support_phone":{"type":"string","description":"Partner's support phone number"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["created_at","global_email_notifications","logo","updated_at"]},"AccountSettingsBrandingCreateParams":{"type":"object","properties":{"global_email_notifications":{"type":"boolean","description":"Turn on or off email notifications for all merchants by default. Individual merchants can override these settings later. Defaults to true."},"logo_file_id":{"type":"string","description":"The File ID of an uploaded [File](#tag/Files) of type `logo`"},"primary_color":{"type":"string","description":"A string indicating a hexadecimal color."},"secondary_color":{"type":"string","description":"A string indicating a hexadecimal color."},"support_email":{"type":"string","description":"Partner's support email address"},"support_phone":{"type":"string","description":"Partner's support phone number"}}},"AccountSettingsCreateParams":{"type":"object","properties":{"branding":{"description":"The account branding settings.","allOf":[{"$ref":"#/components/schemas/AccountSettingsBrandingCreateParams"}]}}},"AccountUpdateParams":{"type":"object","properties":{"bank_account":{"description":"A bank account to attach to this account for receiving payouts. (Note: currently this is only used for `partner` account payouts)\n\nBy default, providing a bank account sets it as the new default bank account for its currency.","allOf":[{"$ref":"#/components/schemas/BankAccountCreateParams"}]},"email":{"type":"string","description":"The primary user's email address."},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"name":{"type":"string","description":"The business name or individual name.","pattern":"/^[^<>;]*$/"},"settings":{"description":"Account Settings","allOf":[{"$ref":"#/components/schemas/AccountSettingsCreateParams"}]},"white_label_domain":{"type":"string","description":"The custom domain the `partner` chooses to reflect on all of its `merchant` accounts as part of the white label settings. It requires `paymentsonline.io` to be appended to the string to be accepted as a valid URL (i.e. `https://customdomain.paymentsonline.io`).\n\n*Note: This feature is only available to `Partner` accounts.*"}}},"AchDebitDetails":{"type":"object","properties":{"account_type":{"type":"string","description":"Account type","enum":["checking","savings","unknown"]},"bank_name":{"type":"string","description":"Name of the bank associated to this Ach Debit."},"last2":{"type":"string","description":"The last 2 digits of the bank account number."},"routing_number":{"type":"string","description":"Nine-digit code that identifies specific financial institution in the US."}}},"AchDebitSingleUseToken":{"type":"object","properties":{"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"details":{"description":"This hash contains details about the ACH Debit bank account.","allOf":[{"$ref":"#/components/schemas/AchDebitDetails"}]},"expires_at":{"format":"date-time","type":"string","description":"The time at which the token expires and is no longer available."},"payment_token":{"type":"string","description":"The single-use token that is capable of being used to generate an `ach_debit` Payment Method. It represents bank account details."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["created_at","expires_at","payment_token","updated_at"]},"Address":{"type":"object","properties":{"city":{"type":"string","description":"City, district, suburb, town, or village."},"country":{"type":"string","description":"Country."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"id":{"type":"string","description":"Unique identifier for the object."},"postal_code":{"type":"string","description":"ZIP or postal code."},"state":{"type":"string","description":"State or province."},"street":{"type":"string","description":"Address line 1 (e.g., street, PO Box, or company name)."},"street2":{"type":"string","description":"Address line 2 (e.g., apartment, suite, unit, or building)."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["created_at","id","updated_at"]},"ApiKey":{"type":"object","properties":{"account_id":{"type":"string","description":"The id of the associated account."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"id":{"type":"string","description":"Unique identifier for the object."},"last_used":{"format":"date-time","type":"string","description":"Time at which the key was last used to authenticate with the API."},"name":{"type":"string","description":"The string that you assign to describe the resource. It defaults to '`type` Key' (e.g. 'Secret Key' and 'Publishable Key')"},"scopes":{"description":"The list of scopes to define the access for this key. You may specify `['*']` to enable all scopes, except those that require explicit selection.","type":"array","items":{"type":"string","enum":["*","accounts:read","accounts:write","accounts:delete","api_keys:read","api_keys:write","auth_links:read","auth_links:write","balance_transactions:read","charges:read","customers:read","customers:write","events:read","payment_intents:read","payment_intents:write","payment_methods:read","payment_methods:write","payouts:read","payouts:write","platform_fees:read","product_codes:read","refunds:read","refunds:write","users:read","users:write","webhook_endpoints:read","webhook_endpoints:write","apple_pay_domains:read","apple_pay_domains:write","bank_accounts:read","bank_accounts:write","files:read","files:write","user_invitations:read","user_invitations:write","subscriptions:read","subscriptions:write","disputes:read","disputes:write","pricing_templates:read","pricing_templates:write","checkout_sessions:read","checkout_sessions:write","outbound_transfers:read","outbound_transfers:write"]}},"type":{"description":"The type of API key.\n\n`secret` can be used to authenticate all endpoints.\n`publishable` is used in your frontend application and can only access a handful of endpoints (e.g. confirm a Payment Intent).","enum":["publishable","secret"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"},"value":{"type":"string","description":"The actual value of the API key to be included in the `tilled-api-key` header for authentication. `secret` keys will have a redacted value except when initially created."}},"required":["account_id","created_at","id","name","scopes","type","updated_at","value"]},"ApiKeyCreateParams":{"type":"object","properties":{"name":{"type":"string","description":"A brief name or description of the API that will help you remember what it is used for."},"scopes":{"description":"The list of scopes to define the access for this key. You may specify `['*']` (default) to enable all scopes, except those that require explicit selection. Scopes are ignored for keys of type `publishable`.","type":"array","items":{"type":"string","enum":["*","accounts:read","accounts:write","accounts:delete","api_keys:read","api_keys:write","auth_links:read","auth_links:write","balance_transactions:read","charges:read","customers:read","customers:write","events:read","payment_intents:read","payment_intents:write","payment_methods:read","payment_methods:write","payouts:read","payouts:write","platform_fees:read","product_codes:read","refunds:read","refunds:write","users:read","users:write","webhook_endpoints:read","webhook_endpoints:write","apple_pay_domains:read","apple_pay_domains:write","bank_accounts:read","bank_accounts:write","files:read","files:write","user_invitations:read","user_invitations:write","subscriptions:read","subscriptions:write","disputes:read","disputes:write","pricing_templates:read","pricing_templates:write","checkout_sessions:read","checkout_sessions:write","outbound_transfers:read","outbound_transfers:write"]}},"type":{"type":"string","description":"`secret` Must be kept secret at all times.\n\n`publishable` A publishable key is only used for creating payment tokens on your public facing website or integration.","enum":["publishable","secret"]}},"required":["type"]},"ApiKeyUpdateParams":{"type":"object","properties":{"name":{"type":"string","description":"A brief name or description of the API that will help you remember what it is used for."},"scopes":{"description":"The list of scopes to define the access for this key. You may specify `['*']` (default) to enable all scopes, except those that require explicit selection. Scopes are ignored for keys of type `publishable`.","type":"array","items":{"type":"string","enum":["*","accounts:read","accounts:write","accounts:delete","api_keys:read","api_keys:write","auth_links:read","auth_links:write","balance_transactions:read","charges:read","customers:read","customers:write","events:read","payment_intents:read","payment_intents:write","payment_methods:read","payment_methods:write","payouts:read","payouts:write","platform_fees:read","product_codes:read","refunds:read","refunds:write","users:read","users:write","webhook_endpoints:read","webhook_endpoints:write","apple_pay_domains:read","apple_pay_domains:write","bank_accounts:read","bank_accounts:write","files:read","files:write","user_invitations:read","user_invitations:write","subscriptions:read","subscriptions:write","disputes:read","disputes:write","pricing_templates:read","pricing_templates:write","checkout_sessions:read","checkout_sessions:write","outbound_transfers:read","outbound_transfers:write"]}}}},"ApplePayDomain":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the Account associated with the domain."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"hostname":{"type":"string","description":"The apple pay domain hostname."},"id":{"type":"string","description":"Unique identifier for the object."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","created_at","hostname","id","updated_at"]},"ApplePayDomainCreateParams":{"type":"object","properties":{"hostname":{"type":"string","description":"The domain hostname. Requires 'https' protocol (e.g. 'https://example.com')"}},"required":["hostname"]},"AuthLinkCreateParams":{"type":"object","properties":{"expiration":{"type":"string","description":"Expiration of the Auth Link (i.e.. 1d, 7d, 30d)"},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"redirect_url":{"type":"string","description":"The console url to redirect the user to after authenticating. Defaults to /dashboard if not provided."},"user_id":{"type":"string","description":"The id of the user."}},"required":["expiration","user_id"]},"AuthLinkDto":{"type":"object","properties":{"account_id":{"type":"string","description":"The account id of the user that can authenticate with this auth link."},"created_at":{"type":"string","description":"Time at which the auth link was created.","format":"date-time"},"expires_at":{"format":"date-time","type":"string","description":"The expiration date of this auth link."},"id":{"type":"string","description":"The id of the auth link."},"metadata":{"type":"object","description":"Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.\"","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"redeemed":{"type":"boolean","description":"Indicates whether this auth link has been redeemed."},"redirect_url":{"type":"string","description":"The console url to redirect the user to after authenticating. Defaults to /dashboard if not provided."},"updated_at":{"type":"string","description":"Time at which the auth link was last updated.","format":"date-time"},"url":{"type":"string","description":"The url to use for authenticating via auth link."},"user_id":{"type":"string","description":"The id of the user that can authenticate with this auth link."}},"required":["account_id","created_at","id","redeemed","updated_at","url","user_id"]},"BLEBankAccount":{"type":"object","properties":{"account_holder_name":{"type":"string","description":"The name of the person or business that owns the bank account."},"account_number":{"type":"string","description":"This is the bank account number","minLength":1,"maxLength":20,"pattern":"^d+$"},"bank_name":{"type":"string","description":"Name of the financial institution."},"routing_number":{"type":"string","description":"The routing number, sort code, or other country-appropriate institution number for the bank account. For US bank accounts, this is required and should be the 9-digit ACH routing number, not the wire routing number. For CA bank accounts, combine the transit and institution numbers to create a full routing number (for example,  if `transit = 12345` and `institution = 678`, then `routing_number = 12345678`)."},"type":{"type":"string","description":"The bank account type","enum":["checking","savings"]}},"required":["account_number","routing_number"]},"BalanceTransaction":{"type":"object","properties":{"account_id":{"type":"string"},"amount":{"type":"number","description":"Gross amount of the transaction, in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). Can be negative for certain transaction types (e.g. `payout`, `refund`)."},"available_on":{"format":"date-time","type":"string","description":"The date the transaction's net funds will become available in the Tilled balance."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"description":{"type":"string","description":"An arbitrary string attached to the object. Often useful for displaying to users."},"fee":{"type":"number","description":"Fees (in smallest currency unit) paid for this transaction.\nNote: Fees are now portrayed as individual balance transactions of `type = fee`.","deprecated":true},"fee_details":{"description":"Detailed breakdown of the fees paid for this transaction.\nNote: Fees are now portrayed as individual balance transactions of `type = fee`. Refer to `fee_type` and `fee_subtype` for details.","deprecated":true,"type":"array","items":{"$ref":"#/components/schemas/BalanceTransactionFeeDetail"}},"fee_subtype":{"type":"string","description":"Fee subtype, if this transaction represents a fee (i.e. type = fee).","enum":["approved_verification","declined_verification","approved_authorization","declined_authorization","reversed_authorization","completed_credit","declined_credit","completed_settlement","declined_settlement","approved_purchase_return_authorization","declined_purchase_return_authorization","acquirer_processing","amex_card_not_present","amex_dues_and_assessments","amex_international_assessment","discover_assessment","discover_data_usage","dues_and_assessments","fixed_acquirer_network","mastercard_annual_location","mastercard_assessment","mastercard_assessment_1000_plus","mastercard_digital_commerce_development","mastercard_digital_enablement","mastercard_international_assessment","mastercard_processing_integrity","nabu","transaction_integrity","visa_assessment","visa_debit_assessment","visa_international_assessment","visa_misuse_of_authorization","reversal","discount","transaction","account_setup","ach_return","monthly_account","monthly_minimum_processing","retrieval","goods_and_services","harmonized_sales"]},"fee_type":{"description":"Fee type, if this transaction represents a fee (i.e. type = fee).","enum":["discount","transaction","interchange","pass_through","platform","chargeback","administrative","tax","negative_rounding_adjustment","positive_rounding_adjustment","unknown"],"type":"string"},"id":{"type":"string","description":"Unique identifier for the object."},"net":{"type":"number","description":"Net amount of the transaction, in smallest currency unit.\nNote: Fees are now portrayed as individual balance transactions of `type = fee`. `net` will no longer differ from `amount`.","deprecated":true},"payout_id":{"type":"string","description":"The id of the Payout, if any, associated with this balance transaction."},"source_id":{"type":"string","description":"Tilled id to which this transaction is related"},"source_type":{"description":"Tilled resource type of `source_id`.","enum":["charge","refund","payout","payment_method","platform_fee","platform_fee_refund","dispute","account","outbound_transfer"],"type":"string"},"status":{"description":"If the transaction’s net funds are available in the Tilled balance yet. Either `available` or `pending`.","enum":["available","pending"],"type":"string"},"type":{"description":"Transaction type.","enum":["charge","charge_failure_refund","dispute","dispute_won","refund","refund_failure","adjustment","commission","payout","payout_cancel","payout_failure","fee","platform_fee","platform_fee_refund","outbound_transfer","outbound_transfer_cancel","outbound_transfer_failure","charge_fee","refund_fee","account_fee","payment_method_fee","tilled_fee"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","amount","available_on","created_at","currency","fee","fee_details","id","net","source_id","source_type","status","type","updated_at"]},"BalanceTransactionFeeDetail":{"type":"object","properties":{"account_id":{"type":"string","description":"ID of the `partner` account that earned the fee, if any."},"amount":{"type":"number","description":"Amount of the fee, in currency minor units."},"currency":{"type":"string","description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"description":{"type":"string","description":"An arbitrary string attached to the object. Often useful for displaying to users."},"type":{"type":"string","description":"Type of the fee, one of: `platform_fee`, `tilled_fee` or `tax`.","enum":["platform_fee","tilled_fee","tax","chargeback_fee"]}},"required":["amount","currency","type"]},"BalanceTransactionTypeSummaries":{"type":"object","properties":{"end_time":{"format":"date-time","type":"string","description":"All `balance_transaction.created_at` values included in this summary are less than this value."},"start_time":{"format":"date-time","type":"string","description":"All `balance_transaction.created_at` values included in this summary are greater than or equal to this value."},"summary":{"type":"array","items":{"$ref":"#/components/schemas/BalanceTransactionTypeSummary"}},"time_unit":{"description":"String indicating the unit of time to aggregate the summary of data.","enum":["day","month"],"type":"string"}},"required":["end_time","start_time","summary","time_unit"]},"BalanceTransactionTypeSummary":{"type":"object","properties":{"amount":{"type":"number","description":"The sum of the `amount` value on the balance transactions grouped in this summary."},"count":{"type":"number","description":"Total number of balance transactions grouped in this summary."},"currency":{"type":"string","description":"The currency of each of the balance transactions grouped in this summary.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"fee":{"type":"number","description":"The sum of the `fee` value on the balance transactions grouped in this summary."},"net":{"type":"number","description":"The sum of the `net` value on the balance transactions grouped in this summary."},"type":{"type":"string","description":"The transaction type of each of the balance transactions grouped in this summary.","enum":["charge","charge_failure_refund","dispute","dispute_won","refund","refund_failure","adjustment","commission","payout","payout_cancel","payout_failure","fee","platform_fee","platform_fee_refund","outbound_transfer","outbound_transfer_cancel","outbound_transfer_failure","charge_fee","refund_fee","account_fee","payment_method_fee","tilled_fee"]}},"required":["amount","count","currency","fee","net","type"]},"BalanceTransactionsSummary":{"type":"object","properties":{"data":{"description":"The list of aggregate balance transaction data, grouped by unit of time, type, and currency.","type":"array","items":{"$ref":"#/components/schemas/BalanceTransactionTypeSummaries"}},"parameters":{"description":"The query parameters used to fetch these results, including default parameters.","allOf":[{"$ref":"#/components/schemas/BalanceTransactionsSummaryQueryParams"}]}},"required":["data","parameters"]},"BalanceTransactionsSummaryQueryParams":{"type":"object","properties":{"created_at_gte":{"format":"date-time","type":"string","description":"Minimum `created_at` value to filter by (inclusive). Defaults to the beginning of the current month."},"created_at_lte":{"format":"date-time","type":"string","description":"Maximum `created_at` value to filter by (inclusive). Defaults to midnight tonight."},"include_connected_accounts":{"type":"boolean","description":"Whether or not to include the results from any connected accounts.","default":false},"time_unit":{"description":"String indicating the unit of time to aggregate the summary of data.","default":"month","enum":["day","month"],"type":"string"},"time_zone":{"description":"Time Zone by which to aggregate the results.","default":"America/Chicago","enum":["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/East-Saskatchewan","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","Pacific/Apia","Pacific/Auckland","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap"],"type":"string"},"types":{"description":"An array containing specific balance transaction types. The data will be filtered to include only transactions with a matching type property.","type":"array","items":{"type":"string","enum":["charge","charge_failure_refund","dispute","dispute_won","refund","refund_failure","adjustment","commission","payout","payout_cancel","payout_failure","fee","platform_fee","platform_fee_refund","outbound_transfer","outbound_transfer_cancel","outbound_transfer_failure","charge_fee","refund_fee","account_fee","payment_method_fee","tilled_fee"]}}}},"BankAccount":{"type":"object","properties":{"account_holder_name":{"type":"string","description":"The name of the person or business that owns the bank account."},"account_id":{"type":"string","description":"The ID of the Account associated with the bank account."},"bank_name":{"type":"string","description":"Name of the bank associated with the routing number (e.g. `WELLS FARGO`)."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"type":"string","description":"The currency the bank account is in. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"default_for_currency":{"type":"boolean","description":"Whether this bank account is the default account for its currency."},"id":{"type":"string","description":"Unique identifier for the object."},"last4":{"type":"string","description":"The last 4 digits of the bank account number."},"routing_number":{"type":"string","description":"The US bank account routing number."},"status":{"type":"string","description":"Bank account status","enum":["new","validated","verified","verification_failed","errored"]},"type":{"type":"string","description":"The bank account type","enum":["checking","savings"]},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_holder_name","account_id","created_at","currency","default_for_currency","id","last4","routing_number","status","type","updated_at"]},"BankAccountCreateParams":{"type":"object","properties":{"account_holder_name":{"type":"string","description":"The name of the person or business that owns the bank account."},"account_number":{"type":"string","description":"The account number for the bank account, in string form."},"bank_name":{"type":"string","description":"Name of the financial institution."},"currency":{"type":"string","description":"The currency the bank account is in. Three-letter ISO currency code, in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"phone":{"type":"string","description":"Phone number for the financial institution"},"routing_number":{"type":"string","description":"The US bank account routing number."},"type":{"type":"string","description":"The bank account type","enum":["checking","savings"]}},"required":["account_holder_name","account_number","currency","routing_number","type"]},"BaseAddress":{"type":"object","properties":{"city":{"type":"string","description":"City where address is located."},"country":{"type":"string","description":"2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"state":{"type":"string","description":"State/province/region of the address. For US and CA use 2-digit state/province codes (e.g. 'AL', 'AK', 'BC', 'ON', 'etc'.)"},"street":{"type":"string","description":"First line of the street address"},"street2":{"type":"string","description":"Second line of the street address, if required."},"zip":{"type":"string","description":"Zip code or postal code of the address. No special characters.","maxLength":10}},"required":["city","country","state","street","zip"]},"BusinessLegalEntity":{"type":"object","properties":{"ach_bank_account":{"description":"Required for US merchant accounts (`region = US`). This field is deprecated. Please use `bank_account`.","deprecated":true,"allOf":[{"$ref":"#/components/schemas/BLEBankAccount"}]},"address":{"description":"Registered legal address of the business.","allOf":[{"$ref":"#/components/schemas/BaseAddress"}]},"average_transaction_amount":{"type":"number","description":"Average transaction amount, in minor units. (e.g. $100.00 = 10000 minor units)","minimum":1},"average_transactions_per_month":{"type":"number","description":"Average number of transactions per month","minimum":0},"bank_account":{"description":"Bank Account Information","allOf":[{"$ref":"#/components/schemas/BLEBankAccount"}]},"category":{"type":"string","description":"Category code of the business.\n* `ACCT` = Accounting\n* `ART` = Artist Supply and Craft Stores\n* `BEAUTY` = Barber & Beauty Shop\n* `CATERING` = Catering\n* `CHARITY` = Charity\n* `CLEANING` = Cleaning Services\n* `CONSULTANT` = Consultant\n* `CONTRACTOR` = Trade Contractor\n* `DENTIST` = Dentistry\n* `EDU` = Schools & Education\n* `FOOD` = Food/Grocery\n* `LANDSCAPING` = Landscaping\n* `LEGAL` = Legal Services\n* `MEDICAL_PRACT` = Medical Practitioner\n* `MEDICAL_SERV` = Health Services\n* `MEMBERSHIP` = Membership Org.\n* `MISC_FOOD_STORES` = Misc. Food Stores\n* `MISC_MERCH` = Misc General Merchandise\n* `MISC_SERV` = Services\n* `MUSIC` = Music/Entertainment\n* `PC` = Computer Services\n* `PHOTO_FILM` = Photo/FILM\n* `PROF_SERV` = Professional Services\n* `REAL_ESTATE` = Real Estate\n* `RECREATION` = Recreation Services\n* `REPAIR` = Repair Services\n* `RESTO` = Restaurant/Bar\n* `RETAIL` = Direct Marketing Retail (MOTO)\n* `TAXI` = Taxi/Limo\n* `VET` = Veterinary\n* `WEB_DEV` = Web Design\n* `WEB_HOSTING` = Web Hosting","enum":["ACCT","ART","BEAUTY","CATERING","CHARITY","CLEANING","CONSULTANT","CONTRACTOR","DENTIST","EDU","FOOD","LANDSCAPING","LEGAL","MEDICAL_PRACT","MEDICAL_SERV","MEMBERSHIP","MISC_FOOD_STORES","MISC_MERCH","MISC_SERV","MUSIC","PC","PHOTO_FILM","PROF_SERV","REAL_ESTATE","RECREATION","REPAIR","RESTO","RETAIL","TAXI","UTILITY","VET","WEB_DEV","WEB_HOSTING","OTHER"]},"company_email":{"type":"string","description":"Email of the business."},"currency":{"type":"string","description":"Single currency used for processing and settlement for this merchant account.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"description":{"type":"string","description":"Company's business description","maxLength":240},"legal_name":{"type":"string","description":"Registered business legal/trading name (e.g. \"ACME CA\")"},"locale":{"type":"string","description":"The locale value used for the merchant account. Values depend on the region.","enum":["en_US","en_CA","fr_CA","en_GB"]},"name":{"type":"string","description":"The merchant name","pattern":"/^[^<>;]*$/"},"phone":{"type":"string","description":"Customer support phone number of the business. Cannot contain special characters."},"principals":{"description":"Array of Principals (ie Business Owners).","type":"array","items":{"$ref":"#/components/schemas/Principal"}},"region":{"type":"string","description":"Region for the merchant account","enum":["US","CA"]},"statement_descriptor":{"type":"string","description":"Provides information about a payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 20 characters for the concatenated descriptor.","maxLength":20},"tax_identification_number":{"type":"string","description":"Company's Tax Identification Number","minLength":9,"maxLength":9},"type":{"type":"string","description":"Type of business.\n* `CHARITY` = Charity\n* `CIC` = Community Interest Company\n* `CORP` = Corporation\n* `LTD` = Limited\n* `LLC` = Limited Liability Company\n* `LLP` = Limited Liability Partnership\n* `NPCORP` = Non-Profit\n* `PARTNERSHIP` = Partnership\n* `PLC` = Public Limited Company\n* `GOV` = Public Sector/Governmental\n* `SOLEPROP` = Sole Proprietorship/Sole Trader\n* `TRUST` = Trust","enum":["CHARITY","CIC","CORP","LTD","LLC","LLP","NPCORP","PARTNERSHIP","PLC","GOV","SOLEPROP","TRUST"]},"website":{"type":"string","description":"Website of the business.","maxLength":255},"yearly_volume_range":{"type":"string","description":"Estimated yearly volume of transactions of the business.\n* `LOW` = 0-50k\n* `MEDIUM` = 50-100k\n* `HIGH` = 100-250k\n* `VERY_HIGH` = 250k+","enum":["LOW","MEDIUM","HIGH","VERY_HIGH"]}},"required":["address","average_transaction_amount","category","currency","legal_name","locale","name","phone","principals","region","statement_descriptor","tax_identification_number","type","yearly_volume_range"]},"BusinessProfile":{"type":"object","properties":{"address":{"description":"The address for this business.","allOf":[{"$ref":"#/components/schemas/Address"}]},"category":{"type":"string","description":"MCC category.","enum":["ACCT","ART","BEAUTY","CATERING","CHARITY","CLEANING","CONSULTANT","CONTRACTOR","DENTIST","EDU","FOOD","LANDSCAPING","LEGAL","MEDICAL_PRACT","MEDICAL_SERV","MEMBERSHIP","MISC_FOOD_STORES","MISC_MERCH","MISC_SERV","MUSIC","PC","PHOTO_FILM","PROF_SERV","REAL_ESTATE","RECREATION","REPAIR","RESTO","RETAIL","TAXI","UTILITY","VET","WEB_DEV","WEB_HOSTING","OTHER"]},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"legal_name":{"type":"string","description":"The legal name for the business."},"locale":{"type":"string","description":"The locale for the business.","enum":["en_US","en_CA","fr_CA","en_GB"]},"phone":{"type":"string","description":"The business's phone number."},"region":{"type":"string","description":"The region where the business is located.","enum":["US","CA"]},"representatives":{"description":"A list of Representatives included in the onboarding application.","type":"array","items":{"$ref":"#/components/schemas/BusinessRepresentative"}},"structure":{"type":"string","description":"The structure of the business (LLC, Corp, etc.).","enum":["CHARITY","CIC","CORP","LTD","LLC","LLP","NPCORP","PARTNERSHIP","PLC","GOV","SOLEPROP","TRUST"]},"tax_identification_number":{"type":"string","description":"Tax identification number."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"},"website":{"type":"string","description":"The website of the business."}},"required":["address","category","created_at","legal_name","locale","phone","region","representatives","structure","tax_identification_number","updated_at"]},"BusinessRepresentative":{"type":"object","properties":{"addresses":{"type":"array","items":{"$ref":"#/components/schemas/Address"}},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"email":{"type":"string","description":"The email address of the representative."},"first_name":{"type":"string","description":"The representative's first name."},"id":{"type":"string","description":"Unique identifier for the object."},"is_applicant":{"type":"boolean","description":"If this associate is the one completing the application."},"is_control_prong":{"type":"boolean","description":"If this associate has a controlling interest."},"job_title":{"type":"string","description":"The representative's title at the company."},"last_name":{"type":"string","description":"The representative's last name."},"middle_name":{"type":"string","description":"The representative's middle name."},"phone":{"type":"string","description":"The phone number for the representative."},"type":{"type":"string","description":"Type of representative. Ex. shareholder, director, officer, merchant rep","enum":["director","shareholder","merchant_rep","contact"]},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["addresses","created_at","id","is_applicant","is_control_prong","job_title","phone","type","updated_at"]},"CardChargeFeeTemplate":{"type":"object","properties":{"chargeback_fee":{"type":"number","description":"The amount of the fee applied per chargeback, in currency minor units."},"markups":{"description":"The list of additional markups applied to a given card type.","type":"array","items":{"$ref":"#/components/schemas/Markup"}},"retrieval_fee":{"type":"number","description":"The amount of the fee applied per retrieval, in currency minor units."},"reversal_fee":{"type":"number","description":"The amount of the fee applied per reversal, in currency minor units."},"transaction_fee":{"type":"number","description":"The amount of the transaction fee applied to each transaction, in currency minor units."},"transaction_fee_type":{"type":"string","description":"The type of transaction fee this pricing template applies.","enum":["flat_rate","interchange"]}},"required":["chargeback_fee","markups","retrieval_fee","reversal_fee","transaction_fee","transaction_fee_type"]},"CardChecks":{"type":"object","properties":{"address_line1_check":{"type":"string","description":"If an address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.","enum":["pass","fail","unavailable","unchecked"]},"address_postal_code_check":{"type":"string","description":"If an address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.","enum":["pass","fail","unavailable","unchecked"]},"cvc_check":{"type":"string","description":"If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.","enum":["pass","fail","unavailable","unchecked"]}}},"CardDetails":{"type":"object","properties":{"brand":{"type":"string","description":"Type of card.","enum":["amex","diners","discover","jcb","maestro","mastercard","solo","visa","visa_debit","visa_electron","unknown"]},"checks":{"description":"Checks on Card address and CVC if provided.","allOf":[{"$ref":"#/components/schemas/CardChecks"}]},"exp_month":{"type":"number","description":"Two-digit number representing the card's expiration month."},"exp_year":{"type":"number","description":"Two- or four-digit number representing the card's expiration year."},"funding":{"type":"string","description":"Card funding type.","enum":["credit","debit","prepaid","unknown"]},"holder_name":{"type":"string","description":"The card holder's name."},"last4":{"type":"string","description":"Last 4 digits of the card."}}},"Charge":{"type":"object","properties":{"amount_captured":{"type":"number","description":"Amount (in the smallest currency unit) captured. Can be less than the `amount` on the PaymentIntent if a partial capture was made."},"amount_refunded":{"type":"number","description":"Amount (in the smallest currency unit) refunded. Can be less than the `amount` on the PaymentIntent if a partial refund was made."},"balance_transaction":{"description":"The balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).\nNote: Multiple balance transactions may be associated with this resource and you can fetch them all with `/balance-transactions?source_id={id}`.","deprecated":true,"allOf":[{"$ref":"#/components/schemas/BalanceTransaction"}]},"captured":{"type":"boolean","description":"If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured."},"captured_at":{"format":"date-time","type":"string","description":"Time at which the charge was captured."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"failed_at":{"format":"date-time","type":"string","description":"Time at which the charge failed."},"failure_code":{"type":"string","description":"Error code explaining reason for charge failure.","enum":["account_closed","account_frozen","account_number_invalid","authorization_revoked","avs_check_failed","bank_account_blocked","call_issuer","card_not_supported","expired_card","fraudulent","generic_decline","incorrect_cvc","insufficient_funds","invalid_expiry","invalid_field","invalid_number","limit_exceeded","no_account","not_authorized","not_permitted","processing_error","not_recognized","pickup_card","restricted_card","risk_blocked","service_not_allowed","stop_payment","internal_error"]},"failure_message":{"type":"string","description":"Message to user further explaining the reason for the charge failure."},"id":{"type":"string","description":"Unique identifier for the object."},"payment_intent_id":{"type":"string","description":"The ID of the PaymentIntent associated with this charge."},"payment_method_id":{"type":"string","description":"The id of the PaymentMethod at the time of the transaction."},"platform_fee":{"description":"The platform fee (if any) for the charge.","allOf":[{"$ref":"#/components/schemas/PlatformFee"}]},"refunded":{"type":"boolean","description":"Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will be false."},"refunds":{"description":"A list of refunds that have been applied to the charge.","type":"array","items":{"$ref":"#/components/schemas/Refund"}},"status":{"type":"string","description":"The status of the payment.","enum":["succeeded","pending","failed"]},"updated_at":{"type":"string","description":"Time at which the object was updated.","format":"date-time"}},"required":["amount_captured","amount_refunded","captured","created_at","id","payment_intent_id","payment_method_id","refunded","refunds","status","updated_at"]},"CheckoutSession":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the account for this checkout session."},"amount_total":{"type":"number","description":"Total of all items, in currency minor units."},"cancel_url":{"type":"string","description":"If set, checkout will display a back button and customers will be directed to this URL if they decide to cancel payment and return to your website."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"customer_details":{"description":"The customer details.","allOf":[{"$ref":"#/components/schemas/CustomerDetails"}]},"customer_id":{"type":"string","description":"The ID of the customer for this checkout session."},"expires_at":{"format":"date-time","type":"string","description":"The due date for the checkout session. After this date the customer will no longer be able to complete the checkout session."},"id":{"type":"string","description":"Unique identifier for the object."},"line_items":{"description":"A list of items the customer is purchasing. The maximum is 100 line items, however it is recommended to consolidate line items if there are more than a few dozen.","type":"array","items":{"$ref":"#/components/schemas/CheckoutSessionLineItem"}},"metadata":{"type":"object","description":"Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.\"","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"payment_intent_id":{"type":"string","description":"The ID of the payment intent for checkout session."},"payment_method_types":{"description":"A list of the types of payment methods (e.g. card) this checkout session is allowed to accept.","type":"array","items":{"type":"string","enum":["card","ach_debit","eft_debit"]}},"status":{"description":"The status of the checkout session, one of `open`, `complete` or `expired`.\n\n`open`\nThe checkout session is still in progress. Payment processing has not started.\n\n`complete`\nThe checkout session is complete. Payment processing may still be in progress.\n\n`expired`\nThe checkout session has expired. No further processing will occur.","enum":["open","complete","expired"],"type":"string"},"success_url":{"type":"string","description":"The URL to which we should send customers when payment is complete. It is recommended that you supply this value,\nbut if none is provided, a generic success landing page will be used."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"},"url":{"type":"string","description":"The URL to the checkout session. Redirect customers to this URL to take them to checkout."}},"required":["account_id","amount_total","created_at","currency","id","line_items","payment_intent_id","payment_method_types","status","updated_at","url"]},"CheckoutSessionCreateParams":{"type":"object","properties":{"cancel_url":{"type":"string","description":"If set, checkout will display a back button and customers will be directed to this URL if they decide to cancel payment and return to your website."},"customer_email":{"type":"string","description":"If provided, this value will be used when the Customer object is created. If not provided, customers will be asked to enter their email address. Use this parameter to prefill customer data if you already have an email on file. To access information about the customer once a session is complete, use the customer_id field to fetch the customer."},"customer_id":{"type":"string","description":"The ID of the customer for this checkout session."},"expires_at":{"format":"date-time","type":"string","description":"The due date for the checkout session. After this date the customer will no longer be able to complete the checkout session."},"line_items":{"description":"A list of items the customer is purchasing. The maximum is 100 line items, however it is recommended to consolidate line items if there are more than a few dozen.","maxItems":100,"type":"array","items":{"$ref":"#/components/schemas/CheckoutSessionLineItem"}},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"payment_intent_data":{"description":"A subset of parameters to be passed to the payment intent creation.","allOf":[{"$ref":"#/components/schemas/PaymentIntentDataCreateParams"}]},"success_url":{"type":"string","description":"The URL to which we should send customers when payment is complete. It is recommended that you supply this value,\nbut if none is provided, a generic success landing page will be used."}},"required":["line_items","payment_intent_data"]},"CheckoutSessionLineItem":{"type":"object","properties":{"price_data":{"description":"Data about the price of this line item.","allOf":[{"$ref":"#/components/schemas/Price"}]},"quantity":{"type":"number","description":"Quantity of the item. Maximum decimal places 4.","minimum":0.0001}},"required":["price_data","quantity"]},"Customer":{"type":"object","properties":{"account_id":{"type":"string","description":"The id of the associated account."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"email":{"type":"string","description":"The customer's email address."},"first_name":{"type":"string","description":"The customer's first name."},"id":{"type":"string","description":"Unique identifier for the object."},"last_name":{"type":"string","description":"The customer's last name."},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"middle_name":{"type":"string","description":"The customer's middle name."},"phone":{"type":"string","description":"The customer's phone number."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","created_at","id","updated_at"]},"CustomerCreateParams":{"type":"object","properties":{"email":{"type":"string","description":"The customer's email address."},"first_name":{"type":"string","description":"The customer's first name.","maxLength":255},"last_name":{"type":"string","description":"The customer's last name.","maxLength":255},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"middle_name":{"type":"string","description":"The customer's middle name.","maxLength":255},"phone":{"type":"string","description":"The customer's phone number."}}},"CustomerDetails":{"type":"object","properties":{"email":{"type":"string","description":"The customer's email address."}},"required":["email"]},"CustomerUpdateParams":{"type":"object","properties":{"email":{"type":"string","description":"The customer's email address."},"first_name":{"type":"string","description":"The customer's first name.","maxLength":255},"last_name":{"type":"string","description":"The customer's last name.","maxLength":255},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"middle_name":{"type":"string","description":"The customer's middle name.","maxLength":255},"phone":{"type":"string","description":"The customer's phone number."}}},"DebitFeeTemplate":{"type":"object","properties":{"return_fee":{"type":"number","description":"The amount of the fee applied per return, in currency minor units."},"transaction_fee":{"type":"number","description":"The amount of the transaction fee applied to each transaction, in currency minor units or hundredths of a percent depending on the transaction_fee_type selected."},"transaction_fee_type":{"type":"string","description":"The type of transaction fee this pricing template applies.","enum":["flat_rate"]}},"required":["return_fee","transaction_fee","transaction_fee_type"]},"Dispute":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the Account associated with this dispute."},"amount":{"type":"number","description":"Amount of the charge that is in dispute in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). If the dispute is type `chargeback` the amount has already been deducted from your account balance and can only be restored by submitting evidence proving the validity of the charge."},"balance_transactions":{"description":"The balance transactions that describes the impact of this dispute on your account balance.","type":"array","items":{"$ref":"#/components/schemas/BalanceTransaction"}},"charge_id":{"type":"string","description":"The ID of the Charge associated with this dispute."},"closing_at":{"type":"string","description":"Time at which the supporting evidence is due and the dispute will be closed with no response.","format":"date-time"},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"evidence":{"description":"Evidence submitted to challenge the dispute.","allOf":[{"$ref":"#/components/schemas/DisputeEvidence"}]},"id":{"type":"string","description":"Unique identifier for the object."},"reason_description":{"type":"string","description":"Description explaining the reason for a dispute"},"reversed_at":{"type":"string","description":"Time at which the dispute was reversed.","format":"date-time"},"status":{"description":"Current status of the dispute.","enum":["warning_needs_response","warning_under_review","warning_closed","needs_response","under_review","closed","won","lost"],"type":"string"},"status_history":{"description":"Status history of the dispute.","type":"array","items":{"$ref":"#/components/schemas/DisputeStatusHistory"}},"updated_at":{"type":"string","description":"Time at which the object was updated.","format":"date-time"}},"required":["account_id","amount","balance_transactions","charge_id","created_at","currency","id","status","status_history","updated_at"]},"DisputeEvidence":{"type":"object","properties":{"description":{"type":"string","description":"Description of the evidence submitted to challenge the dispute."},"files":{"description":"Evidentiary files attached to the dispute.","type":"array","items":{"$ref":"#/components/schemas/DisputeFile"}}},"required":["description","files"]},"DisputeEvidenceCreateParams":{"type":"object","properties":{"description":{"type":"string","description":"Description of the evidence submitted to challenge the dispute."},"files":{"description":"Evidentiary files to attach to the dispute.","type":"array","items":{"$ref":"#/components/schemas/DisputeFileCreateParams"}}}},"DisputeFile":{"type":"object","properties":{"file":{"description":"The file.","allOf":[{"$ref":"#/components/schemas/File"}]},"type":{"type":"string","description":"The type of evidence provided in the file.","enum":["customer_communications","refund_policy","cancellation_policy","customer_signature","receipt","service_documentation","duplicate_charge_documentation","shipping_documentation","uncategorized"]}},"required":["file","type"]},"DisputeFileCreateParams":{"type":"object","properties":{"file_id":{"type":"string","description":"The id of the file."},"type":{"type":"string","description":"The type of evidence provided in the file.","enum":["customer_communications","refund_policy","cancellation_policy","customer_signature","receipt","service_documentation","duplicate_charge_documentation","shipping_documentation","uncategorized"]}},"required":["file_id","type"]},"DisputeStatusHistory":{"type":"object","properties":{"status":{"type":"string","description":"Historical status of the dispute.","enum":["warning_needs_response","warning_under_review","warning_closed","needs_response","under_review","closed","won","lost"]},"status_date":{"format":"date-time","type":"string","description":"Time at which the dispute entered this status."}},"required":["status","status_date"]},"EftDebitDetails":{"type":"object","properties":{"bank_name":{"type":"string","description":"Name of the bank associated to this Eft Debit."},"institution_id":{"type":"string","description":"The sequence of three-digits used by banks to identify specific financial institutions"},"last2":{"type":"string","description":"The last 2 digits of the bank account number."},"transit_number":{"type":"string","description":"The sequence of five-digits used by banks to identify specific financial institution's branch"}}},"Event":{"type":"object","properties":{"account_id":{"type":"string","description":"The id of the account that originated the event."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"data":{"type":"object","description":"Object containing the API resource relevant to the event. For example, a `charge.succeeded` event will have a full charge object as the value."},"id":{"type":"string","description":"Unique identifier for the object."},"type":{"type":"string","description":"Description of the event (e.g. `charge.succeeded` or `charge.refunded`).\n\n`account.updated` Occurs whenever an account status or property has changed. This includes capability statuses.\n\n`charge.captured` Occurs whenever a previously uncaptured charge is captured.\n\n`charge.expired` Occurs whenever an uncaptured charge expires.\n\n`charge.failed` Occurs whenever a failed charge attempt occurs.\n\n`charge.succeeded` Occurs whenever a new charge is created and is successful.\n\n`charge.pending` Occurs whenever a pending charge is created.\n\n`charge.refunded` occurs whenever a charge is refunded, including partial refunds\n\n`charge.refund.updated` Occurs whenever a refund is updated, on selected payment methods.\n\n`charge.updated` Occurs when a charge description is updated\n\n`customer.created` Occurs whenever a new customer is created.\n\n`customer.deleted` Occurs whenever a customer is deleted.\n\n`customer.updated` Occurs whenever any property of a customer changes.\n\n`payment_intent.canceled` Occurs when a PaymentIntent is canceled.\n\n`payment_intent.created` Occurs when a new PaymentIntent is created.\n\n`payment_intent.payment_failed` Occurs when a PaymentIntent has failed the attempt to create a payment method or a payment.\n\n`payment_intent.processing` Occurs when a PaymentIntent has started processing.\n\n`payment_intent.requires_action` Occurs when a PaymentIntent transitions to requires_action state\n\n`payment_intent.succeeded` Occurs when a PaymentIntent has successfully completed payment.\n\n`payment_method.attached` Occurs whenever a new payment method is attached to a customer.\n\n`payment_method.detached` Occurs whenever a payment method is detached from a customer.\n\n`report_run.succeeded` Occurs whenever a report run has successfully been uploaded to S3 and our File system.\n\n`report_run.failed` Occurs whenever a report run has failed to be uploaded to S3 or our File system.","enum":["account.updated","charge.captured","charge.expired","charge.failed","charge.succeeded","charge.pending","charge.refunded","charge.refund.updated","charge.updated","customer.created","customer.deleted","customer.updated","dispute.created","dispute.updated","payment_intent.canceled","payment_intent.created","payment_intent.payment_failed","payment_intent.processing","payment_intent.requires_action","payment_intent.succeeded","payment_intent.amount_capturable_updated","payment_method.attached","payment_method.detached","payout.created","payout.failed","payout.paid","payout.updated","platform_fee.created","platform_fee.refunded","subscription.created","subscription.canceled","subscription.updated","report_run.succeeded","report_run.failed","outbound_transfer.pending","outbound_transfer.failed","outbound_transfer.canceled","outbound_transfer.succeeded"]},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","created_at","data","id","type","updated_at"]},"File":{"type":"object","properties":{"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"expires_at":{"format":"date-time","type":"string","description":"Time at which the file should no longer be accessible."},"filename":{"type":"string","description":"The filename."},"id":{"type":"string","description":"Unique identifier for the object."},"purpose":{"description":"The file purpose.","enum":["logo","icon","terms","report","dispute_evidence","onboarding_documentation"],"type":"string"},"size":{"type":"number","description":"The file size."},"title":{"type":"string","description":"The user friendly title."},"type":{"description":"The file type.","enum":["png","jpg","pdf","csv","tiff"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"},"url":{"type":"string","description":"The URL for the file."}},"required":["created_at","filename","id","purpose","size","type","updated_at"]},"FileCreateParams":{"type":"object","properties":{"file":{"type":"string","description":"A file to upload. The file should follow the specifications of RFC 2388 (which defines file transfers for the multipart/form-data protocol).","format":"binary"},"purpose":{"description":"The file purpose.","enum":["logo","icon","dispute_evidence","onboarding_documentation"],"type":"string"},"title":{"type":"string","description":"The user friendly file title."}},"required":["file","purpose"]},"ForgotPasswordParams":{"type":"object","properties":{"email":{"type":"string","description":"Email"}},"required":["email"]},"HealthOutput":{"type":"object","properties":{"description":{"type":"string","description":"Human-friendly description of the API."},"notes":{"description":"Array of notes relevant to the current state of health.","type":"array","items":{"type":"string"}},"status":{"type":"string","description":"The overall health of the API. `pass` is healthy, `fail` is unhealthy, and `warn` is healthy with some concerns.","enum":["pass","fail","warn"]},"version":{"type":"string","description":"Public version of the API."}},"required":["status"]},"Level3":{"type":"object","properties":{"duty_amount":{"type":"number","description":"Duty associated with the import of the purchased goods on the total amount for the order, in minor units.","minimum":0,"maximum":99999999},"line_items":{"description":"More detailed information about the items being purchased. Max length is 25.","maxItems":25,"type":"array","items":{"$ref":"#/components/schemas/LineItem"}},"shipping_address_country":{"type":"string","description":"2-digit Country code (e.g. 'US', 'CA') of the address to which the purchased goods will be delivered.","minLength":2,"maxLength":2},"shipping_address_zip":{"type":"string","description":"Postal/zip code of the address to which the purchased goods will be delivered. This field can be identical to the `shipping_from_zip` if the customer is present and takes immediate possession of the goods.","maxLength":10},"shipping_amount":{"type":"number","description":"The shipping or freight portion of the total transaction amount, in minor units.","minimum":0,"maximum":99999999},"shipping_from_zip":{"type":"string","description":"Postal/zip code of the address from which the purchased goods are being shipped","maxLength":10}},"required":["duty_amount","line_items","shipping_address_country","shipping_address_zip","shipping_amount","shipping_from_zip"]},"LineItem":{"type":"object","properties":{"product_code":{"type":"string","description":"Merchant-defined product code of the item being purchased","maxLength":12},"product_description":{"type":"string","description":"Description of the item(s) being purchased","maxLength":35},"quantity":{"type":"number","description":"Quantity of the item. Note: will be rounded to a maximum of 4 decimals.","minimum":0},"tax_amount":{"type":"number","description":"Amount of any value-added taxes that can be associated with the purchased item, in minor units.","minimum":0,"maximum":99999999},"unit_amount":{"type":"number","description":"Price of the item being purchased, in minor units.","minimum":0,"maximum":99999999}},"required":["product_code","product_description","quantity","tax_amount","unit_amount"]},"LoginDto":{"type":"object","properties":{"refresh_token":{"type":"string","description":"JSON Web Token used to refresh access tokens."},"token":{"type":"string","description":"JSON Web Token used for authentication (i.e. access token)."},"user":{"description":"The logged in user.","allOf":[{"$ref":"#/components/schemas/User"}]}},"required":["refresh_token","token","user"]},"LoginParams":{"type":"object","properties":{"email":{"type":"string","description":"Email"},"password":{"type":"string","description":"Password"}},"required":["email","password"]},"Markup":{"type":"object","properties":{"card_type":{"type":"string","description":"The card type this markup applies to.","enum":["amex","diners","discover","jcb","maestro","mastercard","solo","visa","visa_debit","visa_electron","unknown"]},"rate":{"type":"number","description":"The amount of the markup applied to this card type."}},"required":["card_type","rate"]},"MerchantApplication":{"type":"object","properties":{"accept_terms_and_conditions":{"type":"boolean","description":"Indicates whether or not the merchant has accepted the terms and conditions."},"business_legal_entity":{"description":"Merchant account details","allOf":[{"$ref":"#/components/schemas/BusinessLegalEntity"}]},"pricing_templates":{"description":"The pricing templates applied to/associated with this merchant application.","type":"array","items":{"$ref":"#/components/schemas/PricingTemplate"}},"product_codes":{"description":"*Deprecated: See `pricing_template` for account details.*\n\nThe product codes applied to/associated with this merchant application.","deprecated":true,"type":"array","items":{"$ref":"#/components/schemas/ProductCode"}},"terms_and_conditions_links":{"description":"Links to terms and conditions for a merchant application.","type":"array","items":{"$ref":"#/components/schemas/TermsAndConditionsDetail"}},"updated_at":{"format":"date-time","type":"string","description":"Time at which the object was last updated."},"validation_errors":{"description":"If an application contains any validation errors they will appear here. If they are not addressed before submission then the submission will fail.","type":"array","items":{"type":"string"}}},"required":["accept_terms_and_conditions","pricing_templates","product_codes"]},"MerchantApplicationCreateParams":{"type":"object","properties":{"accept_terms_and_conditions":{"type":"boolean","description":"Indicates whether or not the merchant has accepted the terms and conditions."},"business_legal_entity":{"description":"Merchant account details","allOf":[{"$ref":"#/components/schemas/BusinessLegalEntity"}]}},"required":["accept_terms_and_conditions"]},"OutboundTransfer":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the account for this outbound transfer."},"amount":{"type":"number","description":"Amount of the outbound transfer, in currency minor units."},"canceled_at":{"type":"string","description":"Populated when `status` is `canceled`, this is the time at which the Outbound Transfer was canceled.","format":"date-time"},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"destination_payment_method_id":{"type":"string","description":"The ID of destination [payment method](#tag/PaymentMethods) to send the outbound transfer to."},"failure_code":{"description":"Error code explaining reason for outbound transfer failure.","enum":["account_closed","account_frozen","account_number_invalid","authorization_revoked","bank_account_blocked","fraudulent","insufficient_funds","invalid_field","limit_exceeded","no_account","not_authorized","not_permitted","processing_error","not_recognized","risk_blocked","stop_payment"],"type":"string"},"failure_message":{"type":"string","description":"Message to user further explaining the reason for the outbound transfer failure."},"id":{"type":"string","description":"Unique identifier for the object."},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"status":{"description":"The status of the outbound transfer.","enum":["canceled","failed","pending","succeeded"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","amount","created_at","currency","destination_payment_method_id","id","status","updated_at"]},"OutboundTransferCreateParams":{"type":"object","properties":{"amount":{"type":"number","description":"Amount intended to be transferred by this OutboundTransfer. A positive integer representing how much to transfer in the smallest currency unit (e.g., 100 cents to transfer $1.00)","minimum":1,"maximum":99999999},"currency":{"type":"string","description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"destination_payment_method_id":{"type":"string","description":"ID of the destination [PaymentMethod](#tag/PaymentMethods) to attach to this OutboundTransfer. [PaymentMethod](#tag/PaymentMethods) must be of type `ach_debit` or `eft_debit`"},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}}},"required":["amount","currency","destination_payment_method_id"]},"PaginatedDto":{"type":"object","properties":{"has_more":{"type":"boolean","description":"Whether or not there are more elements available after this set. If `false`, this set comprises the end of the list."},"limit":{"type":"number","description":"The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used."},"offset":{"type":"number","description":"The (zero-based) offset of the first item in the collection to return."},"total":{"type":"number","description":"The total items count."}},"required":["has_more"]},"PartialAddress":{"type":"object","properties":{"city":{"type":"string","description":"City where address is located.","maxLength":40,"pattern":"/^[^<\\^\\\\\\[\\]\";\\*]*$/"},"country":{"type":"string","description":"2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"state":{"type":"string","description":"State/province/region of the address. For US and CA use 2-digit state/province codes (e.g. 'AL', 'AK', 'BC', 'ON', 'etc'.)"},"street":{"type":"string","description":"First line of the street address","maxLength":50,"pattern":"/^[^<\\^\\\\\\[\\]\";\\*]*$/"},"street2":{"type":"string","description":"Second line of the street address, if required.","maxLength":50,"pattern":"/^[^<\\^\\\\\\[\\]\";\\*]*$/"},"zip":{"type":"string","description":"Zip code or postal code of the address. No special characters.","maxLength":10}}},"PaymentIntent":{"type":"object","properties":{"account_id":{"type":"string","description":"ID of the Tilled account for which the funds of this PaymentIntent are intended."},"amount":{"type":"number","description":"Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency)."},"amount_capturable":{"type":"number","description":"Amount that can be captured from this PaymentIntent."},"amount_received":{"type":"number","description":"Amount that was collected by this PaymentIntent."},"canceled_at":{"format":"date-time","type":"string","description":"Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled."},"cancellation_reason":{"description":"Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Tilled internally (`automatic`).","enum":["duplicate","fraudulent","requested_by_customer","abandoned","automatic"],"type":"string"},"capture_method":{"description":"Controls when the funds will be captured from the customer’s account.\n\n`automatic`\n(Default) Tilled automatically captures funds when the customer authorizes the payment.\n\n`manual`\nPlace a hold on funds when the customer authorizes the payment, but don't capture the funds until later.","enum":["automatic","manual"],"type":"string"},"charges":{"description":"Charges that were created by this PaymentIntent, if any. At most, this list will only contain one successful charge.","type":"array","items":{"$ref":"#/components/schemas/Charge"}},"client_secret":{"type":"string","description":"The client secret of this PaymentIntent.\nThe client secret, along with a publishable key, can be used to complete a payment from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"customer":{"description":"The Customer this PaymentIntent belongs to, if one exists. Payment methods attached to other Customers cannot be used with this PaymentIntent.","allOf":[{"$ref":"#/components/schemas/Customer"}]},"id":{"type":"string","description":"Unique identifier for the object."},"last_payment_error":{"description":"The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.","allOf":[{"$ref":"#/components/schemas/PaymentIntentError"}]},"level3":{"description":"Level 2 and Level 3 (L2/L3) credit card processing refers to certain B2B card transactions for which the merchant might be eligible for lower credit card interchange rates. The lower rates may be available for merchants who provide more detailed information when processing card-not-present transactions.","allOf":[{"$ref":"#/components/schemas/Level3"}]},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"occurrence_type":{"description":"Used to identify authorization requests that use stored credentials to improve authorization rates and reduce fraud.\n\n`consumer_ad_hoc`\nAd hoc consumer-initiated request\n\n`merchant_ad_hoc`\nUnscheduled merchant-initiated request\n\n`merchant_recurring`\nScheduled, merchant-initiated recurring request","enum":["consumer_ad_hoc","merchant_ad_hoc","merchant_recurring"],"type":"string"},"payment_method":{"description":"The PaymentMethod used in this PaymentIntent.","allOf":[{"$ref":"#/components/schemas/PaymentMethod"}]},"payment_method_types":{"description":"The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.","type":"array","items":{"type":"string","enum":["card","ach_debit","eft_debit"]}},"platform_fee_amount":{"type":"number","description":"The amount of the fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped a the total payment amount."},"statement_descriptor_suffix":{"type":"string","description":"Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor"},"status":{"description":"Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`.","enum":["canceled","processing","requires_action","requires_capture","requires_confirmation","requires_payment_method","succeeded"],"type":"string"},"subscription_id":{"type":"string","description":"ID of the subscription related to this PaymentIntent (if any)."},"updated_at":{"type":"string","description":"Time at which the object was updated.","format":"date-time"}},"required":["account_id","amount","amount_capturable","amount_received","capture_method","charges","client_secret","created_at","currency","id","payment_method_types","status","updated_at"]},"PaymentIntentCancelParams":{"type":"object","properties":{"cancellation_reason":{"description":"Reason for canceling this PaymentIntent. Possible values are `duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`","enum":["duplicate","fraudulent","requested_by_customer","abandoned"],"type":"string"}}},"PaymentIntentCaptureParams":{"type":"object","properties":{"amount_to_capture":{"type":"number","description":"The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount will be automatically refunded. Defaults to the full `amount` if not provided.","minimum":1,"maximum":99999999},"platform_fee_amount":{"type":"number","description":"The amount of the platform fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped at the total payment amount.","minimum":0}}},"PaymentIntentConfirmParams":{"type":"object","properties":{"payment_method_id":{"type":"string","description":"ID of the PaymentMethod to attach to this PaymentIntent."}}},"PaymentIntentCreateParams":{"type":"object","properties":{"amount":{"type":"number","description":"Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00)","minimum":1,"maximum":99999999},"capture_method":{"type":"string","description":"Controls when the funds will be captured from the customer’s account.\n\n`automatic`\n(Default) Tilled automatically captures funds when the customer authorizes the payment.\n\n`manual`\nPlace a hold on funds when the customer authorizes the payment, but don't capture the funds until later.","enum":["automatic","manual"]},"confirm":{"type":"boolean","description":"Set to 'true' to attempt to confirm this PaymentIntent immediately. This parameter defaults to `false`."},"currency":{"type":"string","description":"Three-letter ISO currency code, in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"level3":{"description":"Level 2 and Level 3 (L2/L3) credit card processing refers to certain B2B card transactions for which the merchant might be eligible for lower credit card interchange rates. The lower rates may be available for merchants who provide more detailed information when processing card-not-present transactions.","allOf":[{"$ref":"#/components/schemas/Level3"}]},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"occurrence_type":{"type":"string","description":"Used to identify authorization requests that use stored credentials to improve authorization rates and reduce fraud.\n\n`consumer_ad_hoc`\nAd hoc consumer-initiated request\n\n`merchant_ad_hoc`\nUnscheduled merchant-initiated request\n\n`merchant_recurring`\nScheduled, merchant-initiated recurring request","enum":["consumer_ad_hoc","merchant_ad_hoc","merchant_recurring"]},"payment_method_id":{"type":"string","description":"ID of the PaymentMethod to attach to this PaymentIntent."},"payment_method_types":{"description":"The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.","type":"array","items":{"type":"string","enum":["card","ach_debit","eft_debit"]}},"platform_fee_amount":{"type":"number","description":"The amount of the platform fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped at the total payment amount.","minimum":0},"statement_descriptor_suffix":{"type":"string","description":"Provides information about a payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 20 characters for the concatenated descriptor.","minLength":1,"maxLength":20,"pattern":"^[^<>\\'\"*]*$"}},"required":["amount","currency","payment_method_types"]},"PaymentIntentDataCreateParams":{"type":"object","properties":{"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"payment_method_types":{"description":"The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.","type":"array","items":{"type":"string","enum":["card","ach_debit","eft_debit"]}},"platform_fee_amount":{"type":"number","description":"The amount of the platform fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped at the total payment amount.","minimum":0}},"required":["payment_method_types"]},"PaymentIntentError":{"type":"object","properties":{"charge_id":{"type":"string","description":"The id of the failed charge."},"code":{"type":"string","description":"Error code explaining reason for charge failure.","enum":["account_closed","account_frozen","account_number_invalid","authorization_revoked","avs_check_failed","bank_account_blocked","call_issuer","card_not_supported","expired_card","fraudulent","generic_decline","incorrect_cvc","insufficient_funds","invalid_expiry","invalid_field","invalid_number","limit_exceeded","no_account","not_authorized","not_permitted","processing_error","not_recognized","pickup_card","restricted_card","risk_blocked","service_not_allowed","stop_payment","internal_error"]},"message":{"type":"string","description":"A human-readable message providing more details about the error."}},"required":["charge_id","message"]},"PaymentIntentUpdateParams":{"type":"object","properties":{"amount":{"type":"number","description":"Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00)","minimum":1,"maximum":99999999},"capture_method":{"type":"string","description":"Controls when the funds will be captured from the customer’s account.\n\n`automatic`\n(Default) Tilled automatically captures funds when the customer authorizes the payment.\n\n`manual`\nPlace a hold on funds when the customer authorizes the payment, but don't capture the funds until later.","enum":["automatic","manual"]},"currency":{"type":"string","description":"Three-letter ISO currency code, in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"level3":{"description":"Level 2 and Level 3 (L2/L3) credit card processing refers to certain B2B card transactions for which the merchant might be eligible for lower credit card interchange rates. The lower rates may be available for merchants who provide more detailed information when processing card-not-present transactions.","allOf":[{"$ref":"#/components/schemas/Level3"}]},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"occurrence_type":{"type":"string","description":"Used to identify authorization requests that use stored credentials to improve authorization rates and reduce fraud.\n\n`consumer_ad_hoc`\nAd hoc consumer-initiated request\n\n`merchant_ad_hoc`\nUnscheduled merchant-initiated request\n\n`merchant_recurring`\nScheduled, merchant-initiated recurring request","enum":["consumer_ad_hoc","merchant_ad_hoc","merchant_recurring"]},"payment_method_id":{"type":"string","description":"ID of the PaymentMethod to attach to this PaymentIntent."},"payment_method_types":{"description":"The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.","type":"array","items":{"type":"string","enum":["card","ach_debit","eft_debit"]}},"platform_fee_amount":{"type":"number","description":"The amount of the platform fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped at the total payment amount.","minimum":0},"statement_descriptor_suffix":{"type":"string","description":"Provides information about a payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 20 characters for the concatenated descriptor.","minLength":1,"maxLength":20,"pattern":"^[^<>\\'\"*]*$"}}},"PaymentMethod":{"type":"object","properties":{"ach_debit":{"description":"If this is a `ach_debit` PaymentMethod, this hash contains details about the ACH Debit bank account.","allOf":[{"$ref":"#/components/schemas/AchDebitDetails"}]},"billing_details":{"description":"Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods. (e.g. it is required for `ach_debit` and Apple Pay)","allOf":[{"$ref":"#/components/schemas/PaymentMethodBillingDetails"}]},"card":{"description":"If this is a `card` PaymentMethod, this hash contains the user's card details.","allOf":[{"$ref":"#/components/schemas/CardDetails"}]},"chargeable":{"type":"boolean","description":"Indicates whether or not the payment method can be used to make a charge. When a payment method is created via Tilled.js, a payment method is only capable of being used once (i.e. single-use) unless it is attached to a customer, in which case it becomes reusable."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"customer_id":{"type":"string","description":"The ID of the Customer to which this PaymentMethod is saved."},"eft_debit":{"description":"If this is a `eft_debit` PaymentMethod, this hash contains details about the EFT Debit bank account.","allOf":[{"$ref":"#/components/schemas/EftDebitDetails"}]},"expires_at":{"format":"date-time","type":"string","description":"The time at which this PaymentMethod expires and is no longer available. PaymentMethods are created using a token generated by Tilled.js representing the details of a payment method (e.g. card or bank details). This token is a single-use token with an expiration date. Use `/payment-methods/{id}/attach` to make this PaymentMethod reusable."},"id":{"type":"string","description":"Unique identifier for the object."},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"nick_name":{"type":"string","description":"A customer provided name for the PaymentMethod."},"type":{"description":"The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.","enum":["card","ach_debit","eft_debit"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["chargeable","created_at","id","type","updated_at"]},"PaymentMethodAttachParams":{"type":"object","properties":{"customer_id":{"type":"string","description":"The ID of the Customer to which to attach the PaymentMethod."}},"required":["customer_id"]},"PaymentMethodBillingDetails":{"type":"object","properties":{"address":{"description":"The billing address.","allOf":[{"$ref":"#/components/schemas/PartialAddress"}]},"email":{"type":"string","description":"Email address"},"name":{"type":"string","description":"Full name"},"phone":{"type":"string","description":"Billing phone number (including extension)"}}},"PaymentMethodCreateAchDebitSingleUseTokenParams":{"type":"object","properties":{"ach_debit":{"description":"Details about the ACH Direct Debit bank account.","allOf":[{"$ref":"#/components/schemas/PaymentMethodCreateParamsAchDebit"}]},"billing_details":{"description":"Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.","allOf":[{"$ref":"#/components/schemas/PaymentMethodCreateDebitSingleUseTokenParamsBillingDetails"}]}},"required":["ach_debit","billing_details"]},"PaymentMethodCreateDebitSingleUseTokenParamsBillingDetails":{"type":"object","properties":{"address":{"description":"The billing address.","allOf":[{"$ref":"#/components/schemas/BaseAddress"}]},"email":{"type":"string","description":"Email address"},"name":{"type":"string","description":"Full name"},"phone":{"type":"string","description":"Billing phone number (including extension)"}},"required":["address"]},"PaymentMethodCreateParams":{"type":"object","properties":{"ach_debit":{"description":"If this is an `ach_debit` PaymentMethod, this hash contains details about the ACH Direct Debit bank account.","allOf":[{"$ref":"#/components/schemas/PaymentMethodCreateParamsAchDebit"}]},"billing_details":{"description":"Billing information associated with the PaymentMethod that may be used or required by most types of payment methods.","allOf":[{"$ref":"#/components/schemas/PaymentMethodCreateParamsBillingDetails"}]},"card":{"description":"If this is a `card` PaymentMethod, this hash contains the user's card details. When providing a card number, you must meet the requirements for PCI compliance. We strongly recommend using Tilled.js instead of interacting with this API directly.","allOf":[{"$ref":"#/components/schemas/PaymentMethodCreateParamsCard"}]},"eft_debit":{"description":"If this is an `eft_debit` PaymentMethod, this hash contains details about the EFT Direct Debit bank account.","allOf":[{"$ref":"#/components/schemas/PaymentMethodCreateParamsEftDebit"}]},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"nick_name":{"type":"string","description":"A customer provided name for the PaymentMethod."},"payment_token":{"type":"string","description":"A token generated by Tilled.js representing the details of a payment method (e.g. card or bank details)"},"type":{"description":"The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.","enum":["card","ach_debit","eft_debit"],"type":"string"}},"required":["type"]},"PaymentMethodCreateParamsAchDebit":{"type":"object","properties":{"account_holder_name":{"type":"string","description":"The name of the customer or company that owns the bank account.","maxLength":22},"account_number":{"type":"string","description":"This is the bank account number","minLength":4,"maxLength":17},"account_type":{"description":"Bank account type.","enum":["checking","savings"],"type":"string"},"routing_number":{"type":"string","description":"The sequence of 9-digits used by banks to identify specific financial institutions (i.e. ABA routing number)"}},"required":["account_holder_name","account_number","account_type","routing_number"]},"PaymentMethodCreateParamsBillingDetails":{"type":"object","properties":{"address":{"description":"The billing address.","allOf":[{"$ref":"#/components/schemas/PartialAddress"}]},"email":{"type":"string","description":"Email address"},"name":{"type":"string","description":"Full name"},"phone":{"type":"string","description":"Billing phone number (including extension)"}}},"PaymentMethodCreateParamsCard":{"type":"object","properties":{"cvc":{"type":"string","description":"The card's CVC. It is highly recommended to always include this value."},"exp_month":{"type":"number","description":"Two-digit number representing the card's expiration month.","minimum":1,"maximum":12},"exp_year":{"type":"number","description":"Four-digit number representing the card's expiration year.","minimum":1000,"maximum":9999},"number":{"type":"string","description":"The card number, as a string without any separators."}},"required":["exp_month","exp_year","number"]},"PaymentMethodCreateParamsEftDebit":{"type":"object","properties":{"account_holder_name":{"type":"string","description":"The name of the customer or company that owns the bank account.","maxLength":22},"account_number":{"type":"string","description":"This is the bank account number","minLength":4,"maxLength":12},"institution_id":{"type":"string","description":"The sequence of three-digits used by banks to identify specific financial institutions","minLength":3,"maxLength":3},"transit_number":{"type":"string","description":"The sequence of five-digits used by banks to identify specific financial institution's branch","minLength":5,"maxLength":5}},"required":["account_holder_name","account_number","institution_id","transit_number"]},"PaymentMethodUpdateParams":{"type":"object","properties":{"billing_details":{"description":"Billing information associated with the PaymentMethod that may be used or required by most types of payment methods.","allOf":[{"$ref":"#/components/schemas/PaymentMethodCreateParamsBillingDetails"}]},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"nick_name":{"type":"string","description":"A customer provided name for the PaymentMethod."}}},"Payout":{"type":"object","properties":{"account_id":{"type":"string"},"amount":{"type":"number","description":"Amount to be transferred to your bank account, in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency)."},"balance_transaction":{"description":"The balance transaction that describes the impact of this payout on your account balance.\nNote: Multiple balance transactions may be associated with this resource and you can fetch them all with `/balance-transactions?source_id={id}`.","deprecated":true,"allOf":[{"$ref":"#/components/schemas/BalanceTransaction"}]},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"type":"string","description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"description":{"type":"string","description":"An arbitrary string attached to the object. Often useful for displaying to users."},"failure_code":{"type":"string","description":"Error code explaining the reason for a payout failure, if available.","enum":["account_closed","account_frozen","bank_account_restricted","bank_ownership_changed","could_not_process","debit_not_authorized","declined","invalid_account_number","incorrect_account_holder_name","incorrect_account_holder_address","incorrect_account_holder_tax_id","invalid_currency","no_account"]},"id":{"type":"string","description":"Unique identifier for the object."},"paid_at":{"format":"date-time","type":"string","description":"The date the payout was paid."},"status":{"type":"string","description":"Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it is submitted to the bank, when it becomes `in_transit`. The status then changes to `paid` if the transaction goes through, or to `failed` or `canceled` (within 5 business days). Some failed payouts may initially show as `paid` but then change to `failed`.","enum":["canceled","failed","in_transit","paid","pending"]},"transaction_count":{"type":"number","description":"An optional property that is included when specified in a query parameter on request. It represents the number of balance_transaction objects associated with the payout (aside from the payout balance transaction itself)."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","amount","balance_transaction","created_at","currency","id","status","updated_at"]},"PlatformFee":{"type":"object","properties":{"amount":{"type":"number","description":"Amount earned, in minor currency units."},"amount_refunded":{"type":"number","description":"Amount refunded, in minor currency units. Can be less than the amount attribute if a partial refund was issued."},"balance_transaction":{"description":"The balance transaction that describes the impact of this collected platform fee on your account balance (not including refunds).\nNote: Multiple balance transactions may be associated with this resource and you can fetch them all with `/balance-transactions?source_id={id}`.","deprecated":true,"allOf":[{"$ref":"#/components/schemas/BalanceTransaction"}]},"charge_id":{"type":"string","description":"Id of the charge this fee was taken from."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"id":{"type":"string","description":"Unique identifier for the object."},"payee_account_id":{"type":"string","description":"Id of the Tilled account that earned this fee. This is generally an account of `type` `partner`."},"payer_account_id":{"type":"string","description":"Id of the Tilled account this fee was taken from. This is generally an account of `type` `merchant`."},"refunded":{"type":"boolean","description":"Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will be false."},"refunds":{"description":"A list of refunds that have been applied to the fee.","type":"array","items":{"$ref":"#/components/schemas/PlatformFeeRefund"}},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["amount","amount_refunded","balance_transaction","charge_id","created_at","currency","id","payee_account_id","payer_account_id","refunded","refunds","updated_at"]},"PlatformFeeRefund":{"type":"object","properties":{"amount":{"type":"number","description":"Amount in the smallest currency unit."},"balance_transaction":{"description":"The balance transaction that describes the impact of this refund on your account balance.\nNote: Multiple balance transactions may be associated with this resource and you can fetch them all with `/balance-transactions?source_id={id}`.","deprecated":true,"allOf":[{"$ref":"#/components/schemas/BalanceTransaction"}]},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"id":{"type":"string","description":"Unique identifier for the object."},"platform_fee_id":{"type":"string","description":"ID of the platform fee that was refunded."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["amount","balance_transaction","created_at","id","platform_fee_id","updated_at"]},"Price":{"type":"object","properties":{"currency":{"type":"string","description":"Three-letter ISO currency code, in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"product_data":{"description":"Data about the specific goods or services offered at this price.","allOf":[{"$ref":"#/components/schemas/Product"}]},"unit_amount":{"type":"number","description":"A non-negative integer in minor units (i.e. cents) representing how much to charge.","minimum":1,"maximum":99999999}},"required":["currency","product_data","unit_amount"]},"PricingTemplate":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the Account associated with this pricing template."},"account_monthly_fee":{"type":"number","description":"The account monthly fee configured for this pricing template, in currency minor units."},"account_monthly_minimum_fee":{"type":"number","description":"The account monthly minimum fee configured for this pricing template, in currency minor units."},"ach_debit":{"description":"If this is an `ach_debit` pricing template, this hash contains the direct debit specific pricing details.","allOf":[{"$ref":"#/components/schemas/DebitFeeTemplate"}]},"card":{"description":"If this is a `card` pricing template, this hash contains the card specific pricing details.","allOf":[{"$ref":"#/components/schemas/CardChargeFeeTemplate"}]},"created_at":{"format":"date-time","type":"string","description":"Time at which the object was created."},"currency":{"description":"The currency this pricing template applies to.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"eft_debit":{"description":"If this is an `eft_debit` pricing template, this hash contains the direct debit specific pricing details.","allOf":[{"$ref":"#/components/schemas/DebitFeeTemplate"}]},"id":{"type":"string","description":"Unique identifier for the object."},"name":{"type":"string","description":"The name of this pricing template."},"payment_method_type":{"type":"string","description":"The payment method type this pricing template applies to.","enum":["card","ach_debit","eft_debit"]},"status":{"description":"The status of this pricing template","enum":["active","archived","pending"],"type":"string"},"updated_at":{"format":"date-time","type":"string","description":"Time at which the object was last updated."}},"required":["account_id","account_monthly_fee","account_monthly_minimum_fee","created_at","currency","id","name","payment_method_type","status","updated_at"]},"Principal":{"type":"object","properties":{"address":{"description":"Registered *residential* address for this principal","allOf":[{"$ref":"#/components/schemas/PrincipalAddress"}]},"date_of_birth":{"format":"date-time","type":"string","description":"Date of birth of the principal. Format must be ISO8601 (e.g. '2000-01-25'; format 'YYYY-MM-DD'). Currently the principal must be older than 18 years of age."},"email":{"type":"string","description":"Email address of the principal"},"first_name":{"type":"string","description":"First name of the principal."},"id":{"type":"string","description":"The unique identifier for this principal. It is not required upon initial submission. The `ssn` property is redacted in any responses, so if the principal needs to be updated then provide this identifier that was generated during the initial request.","maxLength":36},"is_applicant":{"type":"boolean","description":"Indicates whether this principal is the applicant for the merchant account. For US merchant accounts (`region = US`) it is required that _exactly_ one of the principals is specified as the applicant."},"is_control_prong":{"type":"boolean","description":"This indicates whether the principal is the Control Prong. Control Prong is an individual with significant responsibility for managing the legal entity customer (e.g., a CEO, CFO, COO, Managing Member, General Partner, President, Vice-President, or Treasurer). For US merchant accounts (`region = US`) it is required that _exactly_ one of the principals is specified as the Control Prong."},"job_title":{"type":"string","description":"Job title of the principal (e.g. CEO, CFO, President, VP)"},"last_name":{"type":"string","description":"Last name of the principal."},"middle_name":{"type":"string","description":"Middle name of the principal."},"nationality":{"type":"string","description":"Nationality of the principal","enum":["AF","AL","DZ","US","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BL","BY","BE","BZ","BJ","BM","BT","BO","BA","BR","GB","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","NL","EC","EG","AE","GQ","ER","EE","ET","FK","FO","FJ","PH","FI","FR","GF","PF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GW","GN","GY","HT","HN","HK","HU","KI","IS","IN","ID","IR","IQ","IE","IL","IT","CI","JM","JP","JO","KZ","KE","KN","KW","KG","LA","LV","LB","LR","LY","LI","LT","LU","MO","MK","YT","MG","MW","MY","MV","ML","MT","IM","MH","MQ","MR","MU","MX","FM","MD","MC","MN","ME","MS","MA","LS","BW","MZ","MM","NA","NR","NP","NC","NZ","VU","NI","NG","NE","NU","NF","KP","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PN","PL","PT","PR","QA","RO","RU","RW","SH","LC","VC","PM","SV","WS","SM","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","KR","ES","LK","SD","SS","SR","SZ","SE","CH","SY","ST","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","UY","UZ","VE","VN","VG","WF","EH","YE","ZM","ZW","AX"]},"percentage_shareholding":{"type":"number","description":"Percentage of ownership of the company.","minimum":0,"maximum":100},"phone":{"type":"string","description":"Phone number of the principal."},"previous_address":{"description":"Previous registered *residential* address for this principal. Require for Canadian principals and have lived at their current address for fewer than 3 years.","allOf":[{"$ref":"#/components/schemas/PrincipalAddress"}]},"ssn":{"type":"string","description":"Social Security Number (US) or Social Insurance Number (CA). Optional when business type is `NPCORP`, `CHARITY`, or `GOV`. Expected format: 9-digit string of numbers (e.g. \"111444777\"). Optional in CA.","minLength":9,"maxLength":9},"type":{"type":"string","description":"Type of representative. Ex. shareholder, director, officer, merchant rep","enum":["director","shareholder","merchant_rep","contact"]}},"required":["address","date_of_birth","first_name","is_applicant","job_title","last_name","percentage_shareholding","phone"]},"PrincipalAddress":{"type":"object","properties":{"city":{"type":"string","description":"City where address is located."},"country":{"type":"string","description":"2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"state":{"type":"string","description":"State/province/region of the address. For US and CA use 2-digit state/province codes (e.g. 'AL', 'AK', 'BC', 'ON', 'etc'.)"},"street":{"type":"string","description":"First line of the street address"},"street2":{"type":"string","description":"Second line of the street address, if required."},"years_at_address":{"type":"number","description":"Years at given address. Required for CA merchant accounts (`region = CA`).","minimum":0,"maximum":99},"zip":{"type":"string","description":"Zip code or postal code of the address. No special characters.","maxLength":10}},"required":["city","country","state","street","zip"]},"Product":{"type":"object","properties":{"description":{"type":"string","description":"The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explaination of the product being sold for your own rendering purposes.","maxLength":500},"images":{"description":"A list of up to 8 URLs of images for this product, meant to be displayable to the customer.","type":"array","items":{"type":"string"}},"name":{"type":"string","description":"The product's name, meant to be displayable to the customer."}},"required":["name"]},"ProductCode":{"type":"object","properties":{"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"type":"string","description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"description":{"type":"string","description":"The user friendly description. Example: *2.90% | $0.30 TXN | $10 CHBK/Reversals/Retrievals | $0 Monthly*"},"id":{"type":"string","description":"Unique identifier for the object."},"payment_method_type":{"type":"string","description":"The payment method type that this product code is valid for.","enum":["card","ach_debit","card_present","eft_debit"]},"region":{"type":"string","description":"The Region in which the product code is usable","enum":["US","CA"]},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["created_at","currency","description","id","payment_method_type","updated_at"]},"Refund":{"type":"object","properties":{"amount":{"type":"number","description":"Amount (in the smallest currency unit) refunded."},"balance_transaction":{"description":"The balance transaction that describes the impact of this refund on your account balance.\nNote: Multiple balance transactions may be associated with this resource and you can fetch them all with `/balance-transactions?source_id={id}`.","deprecated":true,"allOf":[{"$ref":"#/components/schemas/BalanceTransaction"}]},"charge_id":{"type":"string","description":"ID of the Charge that was refunded."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"failure_code":{"description":"Error code explaining reason for refund failure.","enum":["expired_or_canceled_card","lost_or_stolen_card","fraudulent","risk_blocked","declined","proprietary_card_activity_regulations","blacklisted_card","not_permitted","processing_error"],"type":"string"},"failure_message":{"type":"string","description":"Message to user further explaining the reason for the refund failure."},"id":{"type":"string","description":"Unique identifier for the object."},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"payment_intent_id":{"type":"string","description":"ID of the PaymentIntent that was refunded."},"payment_method_id":{"type":"string","description":"ID of the payment method that was refunded."},"reason":{"description":"Reason for the refund, either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated  by Tilled (`expired_uncaptured_charge`)","enum":["duplicate","fraudulent","requested_by_customer","expired_uncaptured_charge","partial_capture"],"type":"string"},"status":{"description":"Status of the refund, one of `pending`, `succeeded`, `failed`, or `canceled`.","enum":["canceled","pending","succeeded","failed"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["amount","balance_transaction","charge_id","created_at","id","payment_intent_id","status","updated_at"]},"RefundCreateParams":{"type":"object","properties":{"amount":{"type":"number","description":"A positive integer representing how much of this charge to refund in the smallest currency unit (e.g., 100 cents to charge $1.00). *The default is the entire charge.*","minimum":1,"maximum":99999999},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"payment_intent_id":{"type":"string","description":"ID of the PaymentIntent to refund."},"reason":{"description":"String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`.","enum":["duplicate","fraudulent","requested_by_customer"],"type":"string"},"refund_platform_fee":{"type":"boolean","description":"Boolean indicating whether the platform fee should be refunded when refunding this charge. If a full charge refund is given, the full platform fee will be refunded. Otherwise, the platform fee will be refunded in an amount proportional to the amount of the charge refunded.","default":false}},"required":["payment_intent_id"]},"RegisterDto":{"type":"object","properties":{"account":{"description":"The created account (may be empty when registering via invitation)","allOf":[{"$ref":"#/components/schemas/Account"}]},"token":{"type":"string","description":"JSON Web Token used for authentication."},"user":{"description":"The created user.","allOf":[{"$ref":"#/components/schemas/User"}]}},"required":["account","token","user"]},"RegisterParams":{"type":"object","properties":{"account_name":{"type":"string","description":"The business name or individual name.","maxLength":255},"email":{"type":"string","description":"Email address"},"name":{"type":"string","description":"Full name","maxLength":255},"password":{"type":"string","description":"Password. Requires 1 alphabetic and 1 numeric character and a minimum length of 7.","minLength":7,"pattern":"^(?=.*[A-Za-z])(?=.*[0-9]).*$"},"user_invitation_id":{"type":"string","description":"ID of the user invitation associated with this registration."}},"required":["email","name","password"]},"ReportMetadataKey":{"type":"object","properties":{"metadata_key":{"type":"string"},"metadata_type":{"type":"string","enum":["payment_intent","customer","refund","payment_method"]}},"required":["metadata_key","metadata_type"]},"ReportRun":{"type":"object","properties":{"account_id":{"type":"string","description":"The id of the associated account."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"failure_message":{"type":"string","description":"The failure message of the report run, if status is 'failed'."},"id":{"type":"string","description":"Unique identifier for the object."},"parameters":{"$ref":"#/components/schemas/ReportRunRequestParameters"},"result":{"$ref":"#/components/schemas/File"},"status":{"description":"The status of a report run.","enum":["queued","finished","failed"],"type":"string"},"type":{"description":"The type of a report run.","enum":["payments_summary_1","payouts_summary_1","payouts_summary_2","fees_summary_1","processing_summary_1","disputes_summary_1"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","created_at","id","parameters","status","type","updated_at"]},"ReportRunCreateParams":{"type":"object","properties":{"parameters":{"description":"The request paramaters of a Report Run","allOf":[{"$ref":"#/components/schemas/ReportRunRequestParameters"}]},"report_name":{"type":"string","description":"The name of the report. Can only be alphanumeric, and include hyphens (-), underscores (_), and periods (.)","pattern":"^([A-Z]|[a-z]|[0-9]|[-_.])+$"},"type":{"type":"string","description":"The type of a Report Run.","enum":["payments_summary_1","payouts_summary_1","payouts_summary_2","fees_summary_1","processing_summary_1","disputes_summary_1"]}},"required":["parameters","type"]},"ReportRunRequestParameters":{"type":"object","properties":{"account_id":{"type":"string","description":"The specific child Account Id to run a report on"},"end_at":{"format":"date-time","type":"string","description":"Date of the end of the data to include in the Report Run"},"metadata_keys_to_include":{"description":"List of custom metadata keys to include as columns in the report","type":"array","items":{"$ref":"#/components/schemas/ReportMetadataKey"}},"start_at":{"format":"date-time","type":"string","description":"Date of the start of the data to include in the Report Run"},"time_zone":{"description":"Timezone of the Report Run","default":"America/Chicago","enum":["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/East-Saskatchewan","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Etc/GMT","Etc/GMT+0","Etc/GMT+1","Etc/GMT+10","Etc/GMT+11","Etc/GMT+12","Etc/GMT+2","Etc/GMT+3","Etc/GMT+4","Etc/GMT+5","Etc/GMT+6","Etc/GMT+7","Etc/GMT+8","Etc/GMT+9","Etc/GMT-0","Etc/GMT-1","Etc/GMT-10","Etc/GMT-11","Etc/GMT-12","Etc/GMT-13","Etc/GMT-14","Etc/GMT-2","Etc/GMT-3","Etc/GMT-4","Etc/GMT-5","Etc/GMT-6","Etc/GMT-7","Etc/GMT-8","Etc/GMT-9","Etc/Greenwich","Etc/UCT","Etc/UTC","Etc/Universal","Etc/Zulu","Europe/Amsterdam","Europe/Andorra","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","Pacific/Apia","Pacific/Auckland","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap"],"type":"string"}},"required":["end_at","start_at"]},"ReportRunRetrieveParams":{"type":"object","properties":{"include_expired":{"type":"boolean","description":"Whether to included expired Report Runs or not","default":false}}},"Subscription":{"type":"object","properties":{"account_id":{"type":"string","description":"The id of the associated account."},"billing_cycle_anchor":{"format":"date-time","type":"string","description":"Determines the date of the first payment and the day of week/month/year for subsequent payments. If a month doesn't have the anchor day, the subscription will be billed on the last day of the month. For example, a monthly subscription starting on January 31 bills on Feb 28/29, then March 31, April 30, etc."},"cancel_at":{"format":"date-time","type":"string","description":"A date in the future at which the subscription will automatically get canceled."},"canceled_at":{"format":"date-time","type":"string","description":"If the subscription has been canceled, the date of that cancellation."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"currency":{"description":"Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"],"type":"string"},"customer_id":{"type":"string","description":"The id of the customer who owns the subscription."},"id":{"type":"string","description":"Unique identifier for the object."},"interval_count":{"type":"number","description":"The number of intervals (specified in the `interval_unit` attribute) between subscription billings. For example, `interval_unit=month` and `interval_count=3` bills every 3 months."},"interval_unit":{"description":"The frequency at which a subscription is billed. One of `week`, `month` or `year`.","enum":["week","month","year"],"type":"string"},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\nThis `metadata` will be copied to the `payment_intent.metadata` field when a payment is attempted.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"next_payment_at":{"format":"date-time","type":"string","description":"The date at which payment will next be attempted. The value will be `null` when no more payments are to be attempted. Examples: `canceled` and `paused` statuses or `cancel_at` is prior to what would be the next payment date. When a payment fails and the status changes to `past_due` this value can be manually updated to determine the next attempt."},"pause_at":{"format":"date-time","type":"string","description":"A date in the future at which the subscription will automatically get paused."},"paused_at":{"format":"date-time","type":"string","description":"If the subscription has been paused, the date of the most recent pausing."},"payment_method_id":{"type":"string","description":"The id of the PaymentMethod used for this subscription. It must belong to the customer associated with the subscription."},"platform_fee_amount":{"type":"number","description":"The amount of the fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped a the total payment amount."},"price":{"type":"number","description":"Amount intended to be collected by this subscription. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency)."},"resume_at":{"format":"date-time","type":"string","description":"If the subscription has been paused, the date in the future at which the subscription will automatically return to active."},"status":{"description":"Status of this subscription, one of `active`, `canceled`, `past_due`, `paused`, or `pending`.","enum":["active","canceled","past_due","paused","pending"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","billing_cycle_anchor","created_at","currency","customer_id","id","interval_count","interval_unit","payment_method_id","price","status","updated_at"]},"SubscriptionCreateParams":{"type":"object","properties":{"billing_cycle_anchor":{"format":"date-time","type":"string","description":"Determines the date of the first payment and the day of week/month/year for subsequent payments. If a month doesn't have the anchor day, the subscription will be billed on the last day of the month. For example, a monthly subscription starting on January 31 bills on Feb 28/29, then March 31, April 30, etc. Format must be ISO8601 (e.g. '2000-01-25'; format 'YYYY-MM-DD')."},"cancel_at":{"format":"date-time","type":"string","description":"A date in the future at which the subscription will automatically get canceled."},"currency":{"type":"string","description":"Three-letter ISO currency code, in lowercase.","enum":["aud","cad","dkk","eur","hkd","jpy","nzd","nok","gbp","zar","sek","chf","usd"]},"customer_id":{"type":"string","description":"The id of the customer who owns the subscription."},"interval_count":{"type":"number","description":"The number of intervals (specified in the `interval_unit` attribute) between subscription billings. For example, `interval_unit=month` and `interval_count=3` bills every 3 months.","default":1,"minimum":1},"interval_unit":{"type":"string","description":"The frequency at which a subscription is billed. One of `week`, `month` or `year`.","enum":["week","month","year"]},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"payment_method_id":{"type":"string","description":"The id of the PaymentMethod used for this subscription. It must belong to the customer associated with the subscription."},"platform_fee_amount":{"type":"number","description":"The amount of the fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped a the total payment amount.","minimum":0},"price":{"type":"number","description":"Amount intended to be collected by this subscription. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).","minimum":1,"maximum":99999999}},"required":["billing_cycle_anchor","currency","customer_id","interval_unit","payment_method_id","price"]},"SubscriptionPauseParams":{"type":"object","properties":{"resume_at":{"format":"date-time","type":"string","description":"The date in the future at which the subscription will automatically return to active."}}},"SubscriptionRetryParams":{"type":"object","properties":{"next_payment_at":{"format":"date-time","type":"string","description":"The date in the future at which the subscription will attempt to retry payment. The default is today."}}},"SubscriptionUpdateParams":{"type":"object","properties":{"cancel_at":{"format":"date-time","type":"string","description":"A date in the future at which the subscription will automatically get canceled."},"metadata":{"type":"object","description":"Set of [key-value pairs](#section/Metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value (i.e. `''` or `null`) to them. All keys can be unset by posting an empty value (i.e. `{}` or `null`) to `metadata`.","additionalProperties":{"type":"string"},"example":{"order_id":"100123","internal_customer_id":"7cb1159d-875e-47ae-a309-319fa7ff395b"}},"pause_at":{"format":"date-time","type":"string","description":"The date in the future at which the subscription will automatically be paused."},"payment_method_id":{"type":"string","description":"The id of the PaymentMethod used for this subscription. It must belong to the customer associated with the subscription."},"platform_fee_amount":{"type":"number","description":"The amount of the fee (if any) that will be requested to be applied to the payment and transferred to the `partner` account. The amount of the fee collected will be capped a the total payment amount.","minimum":0},"price":{"type":"number","description":"Amount intended to be collected by this subscription. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).","minimum":1,"maximum":99999999},"resume_at":{"format":"date-time","type":"string","description":"The date in the future at which the subscription will automatically return to active."}}},"TerminalReader":{"type":"object","properties":{"account_id":{"type":"string","description":"The Account that owns this terminal reader."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"description":{"type":"string","description":"The merchant provided description of the terminal reader"},"id":{"type":"string","description":"Unique identifier for the object."},"serial_number":{"type":"string","description":"The serial number of the terminal reader."},"type":{"type":"string","description":"The type of the terminal reader. Currently only Handpoint powered terminal readers are supported. https://www.handpoint.com/docs/device/Basics","enum":["pax_a920","pax_a920_pro","pax_a60","pax_a77","pax_a80"]},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","created_at","id","serial_number","type","updated_at"]},"TermsAndConditionsDetail":{"type":"object","properties":{"description":{"type":"string"},"link":{"type":"string"},"name":{"type":"string"}},"required":["description","link","name"]},"User":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the Account associated with this user."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"email":{"type":"string","description":"The user email."},"email_settings":{"description":"User email settings.","allOf":[{"$ref":"#/components/schemas/UserEmailSettings"}]},"id":{"type":"string","description":"Unique identifier for the object."},"last_login_at":{"format":"date-time","type":"string","description":"Time at which the user last successfully logged in via the API."},"last_request_at":{"format":"date-time","type":"string","description":"Time at which the user's token was last used to authenticate a request to the API."},"name":{"type":"string","description":"The full name of the user."},"role":{"description":"The user's role, primarily used in the Tilled Dashboard. The roles have varied restrictions on the actions they can take.","enum":["owner","admin","developer","analyst","view_only","merchant_owner","merchant_admin"],"type":"string"},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"},"verification_code":{"type":"string","description":"Six digit verification code of the user."}},"required":["account_id","created_at","email","email_settings","id","name","role","updated_at"]},"UserCreateParams":{"type":"object","properties":{"email":{"type":"string","description":"Email address"},"name":{"type":"string","description":"Full name","maxLength":255},"password":{"type":"string","description":"Password. Requires 1 alphabetic and 1 numeric character and a minimum length of 7.","minLength":7,"pattern":"^(?=.*[A-Za-z])(?=.*[0-9]).*$"},"role":{"description":"The user's role, primarily used in the Tilled Dashboard. The roles have varied restrictions on the actions they can take.\n\n`admin`\nBest for business owners and company administrators.\n\n`developer`\nBest for developers or people primarily using the Tilled API.\n\n`analyst`\nBest for people who need full access to Tilled data, but don't need to update business settings.\n\n`view_only`\nBest for people who need to view Tilled data, but don't need to make any updates.","enum":["admin","developer","analyst","view_only","merchant_owner","merchant_admin"],"type":"string"}},"required":["email","name","password","role"]},"UserEmailSettings":{"type":"object","properties":{"disputes":{"type":"boolean","nullable":true,"description":"Indicates if the user is receiving dispute related emails."}}},"UserEmailSettingsUpdateParams":{"type":"object","properties":{"disputes":{"type":"boolean","nullable":true,"description":"Indicates if the user is receiving dispute related emails.","enum":[true,false,null]}}},"UserInvitation":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the Account associated with this pending user."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"email":{"type":"string","description":"The pending user's email."},"id":{"type":"string","description":"Unique identifier for the object."},"invitation_url":{"type":"string","description":"Frontend link for the user invitation."},"inviter_user_id":{"type":"string","description":"The ID of the user who sent the invitation."},"role":{"description":"The pending user's role, primarily used in the Tilled Dashboard. The roles have varied restrictions on the actions they can take.","enum":["owner","admin","developer","analyst","view_only","merchant_owner","merchant_admin"],"type":"string"},"sent_at":{"format":"date-time","type":"string","description":"Time at which the invitation was last sent."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"}},"required":["account_id","created_at","email","id","role","updated_at"]},"UserInvitationCheck":{"type":"object","properties":{"email":{"type":"string","description":"The pending user's email."},"id":{"type":"string","description":"The ID of the invitation."},"inviter_email":{"type":"string","description":"The email address of the user who sent the invitation."},"partner_account_name":{"type":"string","description":"The name of the parent (ISV) account"}},"required":["email","id"]},"UserInvitationCreateParams":{"type":"object","properties":{"email":{"type":"string","description":"Email address"},"email_template":{"type":"string","description":"The type of email, if any, that should be sent to the new user. Defaults to\n`console_invitation` if one is not provided.\n\n`merchant_application`\n\"You've been invited by {partner name} to complete the setup of your payment processing account.\nTo create your account and access your application follow the link below. {user invitation link}\"\n\n`none`\nNo email sent.\n\n`console_invitation`\n\"You have been invited to access your merchant account with {partner name}. To get started,\naccept the invite below: {user invitation link}. Joining the team will give you access to\nyour merchant dashboard, including information about payments, customers, payouts, and more\".","enum":["merchant_application","none","console_invitation"]},"role":{"description":"The user's role, primarily used in the Tilled Dashboard. The roles have varied restrictions on the actions they can take.\n\n`admin`\nBest for business owners and company administrators.\n\n`developer`\nBest for developers or people primarily using the Tilled API.\n\n`analyst`\nBest for people who need full access to Tilled data, but don't need to update business settings.\n\n`view_only`\nBest for people who need to view Tilled data, but don't need to make any updates.","enum":["admin","developer","analyst","view_only","merchant_owner","merchant_admin"],"type":"string"}},"required":["email","role"]},"UserResetPasswordParams":{"type":"object","properties":{"email":{"type":"string","description":"Email address"},"password":{"type":"string","description":"Password. Requires 1 alphabetic and 1 numeric character and a minimum length of 7.","minLength":7,"pattern":"^(?=.*[A-Za-z])(?=.*[0-9]).*$"},"password_reset_token":{"type":"string","description":"Password reset token"}},"required":["email","password","password_reset_token"]},"UserUpdateParams":{"type":"object","properties":{"email":{"type":"string","description":"Email address","deprecated":true},"email_settings":{"description":"User email settings","allOf":[{"$ref":"#/components/schemas/UserEmailSettingsUpdateParams"}]},"name":{"type":"string","description":"Full name","maxLength":255},"role":{"description":"The user's role, primarily used in the Tilled Dashboard. The roles have varied restrictions on the actions they can take.\n\n`admin`\nBest for business owners and company administrators.\n\n`developer`\nBest for developers or people primarily using the Tilled API.\n\n`analyst`\nBest for people who need full access to Tilled data, but don't need to update business settings.\n\n`view_only`\nBest for people who need to view Tilled data, but don't need to make any updates.","enum":["admin","developer","analyst","view_only","merchant_owner","merchant_admin"],"type":"string"}}},"WebhookEndpoint":{"type":"object","properties":{"account_id":{"type":"string","description":"The id of the associated account."},"created_at":{"type":"string","description":"Time at which the object was created.","format":"date-time"},"description":{"type":"string","description":"An optional description of what the webhook is used for."},"enabled_events":{"type":"array","description":"The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.","items":{"type":"string","enum":["*","account.updated","charge.captured","charge.expired","charge.failed","charge.succeeded","charge.pending","charge.refunded","charge.refund.updated","charge.updated","customer.created","customer.deleted","customer.updated","dispute.created","dispute.updated","payment_intent.canceled","payment_intent.created","payment_intent.payment_failed","payment_intent.processing","payment_intent.requires_action","payment_intent.succeeded","payment_intent.amount_capturable_updated","payment_method.attached","payment_method.detached","payout.created","payout.failed","payout.paid","payout.updated","platform_fee.created","platform_fee.refunded","subscription.created","subscription.canceled","subscription.updated","report_run.succeeded","report_run.failed","outbound_transfer.pending","outbound_transfer.failed","outbound_transfer.canceled","outbound_transfer.succeeded"]}},"id":{"type":"string","description":"Unique identifier for the object."},"secret":{"type":"string","description":"The endpoint's secret, used to generate webhook signatures. Only returned at creation."},"updated_at":{"type":"string","description":"Time at which the object was last updated.","format":"date-time"},"url":{"type":"string","description":"The URL of the webhook endpoint."}},"required":["account_id","created_at","enabled_events","id","updated_at","url"]},"WebhookEndpointCreateParams":{"type":"object","properties":{"description":{"type":"string","description":"An optional description of what the webhook is used for.","maxLength":255},"enabled_events":{"type":"array","description":"The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.","enum":["*","account.updated","charge.captured","charge.expired","charge.failed","charge.succeeded","charge.pending","charge.refunded","charge.refund.updated","charge.updated","customer.created","customer.deleted","customer.updated","dispute.created","dispute.updated","payment_intent.canceled","payment_intent.created","payment_intent.payment_failed","payment_intent.processing","payment_intent.requires_action","payment_intent.succeeded","payment_intent.amount_capturable_updated","payment_method.attached","payment_method.detached","payout.created","payout.failed","payout.paid","payout.updated","platform_fee.created","platform_fee.refunded","subscription.created","subscription.canceled","subscription.updated","report_run.succeeded","report_run.failed","outbound_transfer.pending","outbound_transfer.failed","outbound_transfer.canceled","outbound_transfer.succeeded"],"items":{"type":"string","enum":["*","account.updated","charge.captured","charge.expired","charge.failed","charge.succeeded","charge.pending","charge.refunded","charge.refund.updated","charge.updated","customer.created","customer.deleted","customer.updated","dispute.created","dispute.updated","payment_intent.canceled","payment_intent.created","payment_intent.payment_failed","payment_intent.processing","payment_intent.requires_action","payment_intent.succeeded","payment_intent.amount_capturable_updated","payment_method.attached","payment_method.detached","payout.created","payout.failed","payout.paid","payout.updated","platform_fee.created","platform_fee.refunded","subscription.created","subscription.canceled","subscription.updated","report_run.succeeded","report_run.failed","outbound_transfer.pending","outbound_transfer.failed","outbound_transfer.canceled","outbound_transfer.succeeded"]}},"url":{"type":"string","description":"The URL of the webhook endpoint."}},"required":["enabled_events","url"]},"WebhookEndpointUpdateParams":{"type":"object","properties":{"description":{"type":"string","description":"An optional description of what the webhook is used for.","maxLength":255},"enabled_events":{"type":"array","description":"The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.","enum":["*","account.updated","charge.captured","charge.expired","charge.failed","charge.succeeded","charge.pending","charge.refunded","charge.refund.updated","charge.updated","customer.created","customer.deleted","customer.updated","dispute.created","dispute.updated","payment_intent.canceled","payment_intent.created","payment_intent.payment_failed","payment_intent.processing","payment_intent.requires_action","payment_intent.succeeded","payment_intent.amount_capturable_updated","payment_method.attached","payment_method.detached","payout.created","payout.failed","payout.paid","payout.updated","platform_fee.created","platform_fee.refunded","subscription.created","subscription.canceled","subscription.updated","report_run.succeeded","report_run.failed","outbound_transfer.pending","outbound_transfer.failed","outbound_transfer.canceled","outbound_transfer.succeeded"],"items":{"type":"string","enum":["*","account.updated","charge.captured","charge.expired","charge.failed","charge.succeeded","charge.pending","charge.refunded","charge.refund.updated","charge.updated","customer.created","customer.deleted","customer.updated","dispute.created","dispute.updated","payment_intent.canceled","payment_intent.created","payment_intent.payment_failed","payment_intent.processing","payment_intent.requires_action","payment_intent.succeeded","payment_intent.amount_capturable_updated","payment_method.attached","payment_method.detached","payout.created","payout.failed","payout.paid","payout.updated","platform_fee.created","platform_fee.refunded","subscription.created","subscription.canceled","subscription.updated","report_run.succeeded","report_run.failed","outbound_transfer.pending","outbound_transfer.failed","outbound_transfer.canceled","outbound_transfer.succeeded"]}},"url":{"type":"string","description":"The URL of the webhook endpoint."}}}}}}